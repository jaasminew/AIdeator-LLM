{"ast":null,"code":"var _jsxFileName = \"/Users/kei/AIdeator-LLM/frontend/src/components/MindMap.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './MindMap.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MindMap = ({\n  centralQuestion,\n  concepts\n}) => {\n  _s();\n  const [positions, setPositions] = useState({});\n  const [dragging, setDragging] = useState(null);\n  const [dragOffset, setDragOffset] = useState({\n    x: 0,\n    y: 0\n  });\n  const mapRef = useRef(null);\n  const centralRef = useRef(null);\n\n  // Initialize positions if not set\n  useEffect(() => {\n    if (Object.keys(positions).length === 0) {\n      const initialPositions = {};\n      concepts.forEach((_, index) => {\n        const angle = 2 * Math.PI * index / concepts.length;\n        initialPositions[`concept-${index}`] = {\n          x: Math.cos(angle) * 200,\n          y: Math.sin(angle) * 200\n        };\n      });\n      setPositions(initialPositions);\n    }\n  }, [concepts, positions]);\n  const handleMouseDown = (e, conceptId) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const mapRect = mapRef.current.getBoundingClientRect();\n    setDragging(conceptId);\n    setDragOffset({\n      x: e.clientX - (rect.left - mapRect.left),\n      y: e.clientY - (rect.top - mapRect.top)\n    });\n  };\n  const handleMouseMove = e => {\n    if (!dragging) return;\n    const mapRect = mapRef.current.getBoundingClientRect();\n    const newX = e.clientX - mapRect.left - dragOffset.x;\n    const newY = e.clientY - mapRect.top - dragOffset.y;\n    setPositions(prev => ({\n      ...prev,\n      [dragging]: {\n        x: newX,\n        y: newY\n      }\n    }));\n  };\n  const handleMouseUp = () => {\n    setDragging(null);\n  };\n  useEffect(() => {\n    if (dragging) {\n      document.addEventListener('mousemove', handleMouseMove);\n      document.addEventListener('mouseup', handleMouseUp);\n      return () => {\n        document.removeEventListener('mousemove', handleMouseMove);\n        document.removeEventListener('mouseup', handleMouseUp);\n      };\n    }\n  }, [dragging]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mind-map\",\n    ref: mapRef,\n    style: {\n      cursor: dragging ? 'grabbing' : 'default'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"central-question\",\n      ref: centralRef,\n      children: centralQuestion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      className: \"connections\",\n      children: concepts.map((_, index) => {\n        var _centralRef$current, _mapRef$current;\n        const pos = positions[`concept-${index}`];\n        if (!pos) return null;\n        const centralRect = (_centralRef$current = centralRef.current) === null || _centralRef$current === void 0 ? void 0 : _centralRef$current.getBoundingClientRect();\n        const mapRect = (_mapRef$current = mapRef.current) === null || _mapRef$current === void 0 ? void 0 : _mapRef$current.getBoundingClientRect();\n        if (!centralRect || !mapRect) return null;\n        const centerX = centralRect.width / 2;\n        const centerY = centralRect.height / 2;\n        return /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: centerX,\n          y1: centerY,\n          x2: pos.x,\n          y2: pos.y,\n          className: index > 2 ? 'connection inactive' : 'connection'\n        }, `line-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), concepts.map((concept, index) => {\n      const pos = positions[`concept-${index}`] || {\n        x: 0,\n        y: 0\n      };\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `concept concept-${index + 1} ${index > 2 ? 'inactive' : ''} ${dragging === `concept-${index}` ? 'dragging' : ''}`,\n        style: {\n          transform: `translate(${pos.x}px, ${pos.y}px)`,\n          cursor: dragging === `concept-${index}` ? 'grabbing' : 'grab'\n        },\n        onMouseDown: e => handleMouseDown(e, `concept-${index}`),\n        children: concept\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(MindMap, \"lbjGC3aaDr2s8JYOWVtXmT5+38c=\");\n_c = MindMap;\nexport default MindMap;\nvar _c;\n$RefreshReg$(_c, \"MindMap\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","MindMap","centralQuestion","concepts","_s","positions","setPositions","dragging","setDragging","dragOffset","setDragOffset","x","y","mapRef","centralRef","Object","keys","length","initialPositions","forEach","_","index","angle","Math","PI","cos","sin","handleMouseDown","e","conceptId","rect","currentTarget","getBoundingClientRect","mapRect","current","clientX","left","clientY","top","handleMouseMove","newX","newY","prev","handleMouseUp","document","addEventListener","removeEventListener","className","ref","style","cursor","children","fileName","_jsxFileName","lineNumber","columnNumber","map","_centralRef$current","_mapRef$current","pos","centralRect","centerX","width","centerY","height","x1","y1","x2","y2","concept","transform","onMouseDown","_c","$RefreshReg$"],"sources":["/Users/kei/AIdeator-LLM/frontend/src/components/MindMap.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport './MindMap.css';\n\nconst MindMap = ({ centralQuestion, concepts }) => {\n  const [positions, setPositions] = useState({});\n  const [dragging, setDragging] = useState(null);\n  const [dragOffset, setDragOffset] = useState({ x: 0, y: 0 });\n  const mapRef = useRef(null);\n  const centralRef = useRef(null);\n\n  // Initialize positions if not set\n  useEffect(() => {\n    if (Object.keys(positions).length === 0) {\n      const initialPositions = {};\n      concepts.forEach((_, index) => {\n        const angle = (2 * Math.PI * index) / concepts.length;\n        initialPositions[`concept-${index}`] = {\n          x: Math.cos(angle) * 200,\n          y: Math.sin(angle) * 200\n        };\n      });\n      setPositions(initialPositions);\n    }\n  }, [concepts, positions]);\n\n  const handleMouseDown = (e, conceptId) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const mapRect = mapRef.current.getBoundingClientRect();\n    setDragging(conceptId);\n    setDragOffset({\n      x: e.clientX - (rect.left - mapRect.left),\n      y: e.clientY - (rect.top - mapRect.top)\n    });\n  };\n\n  const handleMouseMove = (e) => {\n    if (!dragging) return;\n\n    const mapRect = mapRef.current.getBoundingClientRect();\n    const newX = e.clientX - mapRect.left - dragOffset.x;\n    const newY = e.clientY - mapRect.top - dragOffset.y;\n\n    setPositions(prev => ({\n      ...prev,\n      [dragging]: { x: newX, y: newY }\n    }));\n  };\n\n  const handleMouseUp = () => {\n    setDragging(null);\n  };\n\n  useEffect(() => {\n    if (dragging) {\n      document.addEventListener('mousemove', handleMouseMove);\n      document.addEventListener('mouseup', handleMouseUp);\n      return () => {\n        document.removeEventListener('mousemove', handleMouseMove);\n        document.removeEventListener('mouseup', handleMouseUp);\n      };\n    }\n  }, [dragging]);\n\n  return (\n    <div \n      className=\"mind-map\" \n      ref={mapRef}\n      style={{ cursor: dragging ? 'grabbing' : 'default' }}\n    >\n      <div className=\"central-question\" ref={centralRef}>\n        {centralQuestion}\n      </div>\n      <svg className=\"connections\">\n        {concepts.map((_, index) => {\n          const pos = positions[`concept-${index}`];\n          if (!pos) return null;\n          \n          const centralRect = centralRef.current?.getBoundingClientRect();\n          const mapRect = mapRef.current?.getBoundingClientRect();\n          \n          if (!centralRect || !mapRect) return null;\n          \n          const centerX = centralRect.width / 2;\n          const centerY = centralRect.height / 2;\n          \n          return (\n            <line\n              key={`line-${index}`}\n              x1={centerX}\n              y1={centerY}\n              x2={pos.x}\n              y2={pos.y}\n              className={index > 2 ? 'connection inactive' : 'connection'}\n            />\n          );\n        })}\n      </svg>\n      {concepts.map((concept, index) => {\n        const pos = positions[`concept-${index}`] || { x: 0, y: 0 };\n        return (\n          <div\n            key={index}\n            className={`concept concept-${index + 1} ${index > 2 ? 'inactive' : ''} ${dragging === `concept-${index}` ? 'dragging' : ''}`}\n            style={{\n              transform: `translate(${pos.x}px, ${pos.y}px)`,\n              cursor: dragging === `concept-${index}` ? 'grabbing' : 'grab'\n            }}\n            onMouseDown={(e) => handleMouseDown(e, `concept-${index}`)}\n          >\n            {concept}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default MindMap; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}