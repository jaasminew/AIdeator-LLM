{"ast":null,"code":"var _jsxFileName = \"/Users/kei/AIdeator-LLM/frontend/src/components/MindMap.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './MindMap.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MindMap = ({\n  centralQuestion,\n  concepts\n}) => {\n  _s();\n  const [positions, setPositions] = useState({});\n  const [draggedConcept, setDraggedConcept] = useState(null);\n  const [dragOffset, setDragOffset] = useState({\n    x: 0,\n    y: 0\n  });\n  const [activeNodes, setActiveNodes] = useState(concepts.map((_, i) => true));\n  const [nodeRefs, setNodeRefs] = useState({});\n  const mapRef = useRef(null);\n  const centralRef = useRef(null);\n\n  // Create refs for each concept node\n  useEffect(() => {\n    const refs = {};\n    concepts.forEach((_, index) => {\n      refs[`concept-${index}`] = /*#__PURE__*/React.createRef();\n    });\n    setNodeRefs(refs);\n  }, [concepts]);\n\n  // Initialize positions to create a perfectly symmetrical star pattern\n  useEffect(() => {\n    if (Object.keys(positions).length === 0 && mapRef.current) {\n      // Wait for a brief moment to ensure dimensions are available\n      setTimeout(() => {\n        const initialPositions = {};\n\n        // Position the concepts in a symmetrical star pattern around the central question\n        if (concepts.length === 5) {\n          // For 5 concepts, create a perfect star with evenly distributed arms\n          const angles = [0,\n          // Top\n          144,\n          // Bottom Right\n          288,\n          // Bottom Left\n          72,\n          // Top Right\n          216 // Top Left\n          ];\n\n          // Use the same distance for all concepts to ensure perfect symmetry\n          const distance = 240;\n\n          // Calculate positions\n          concepts.forEach((_, index) => {\n            const angleRad = (angles[index] - 90) * Math.PI / 180; // -90 to start from top\n            initialPositions[`concept-${index}`] = {\n              x: Math.cos(angleRad) * distance,\n              y: Math.sin(angleRad) * distance\n            };\n          });\n        } else {\n          // For any other number of concepts, distribute evenly in a circle\n          concepts.forEach((_, index) => {\n            const angle = 2 * Math.PI * index / concepts.length - Math.PI / 2; // Start from top\n            initialPositions[`concept-${index}`] = {\n              x: Math.cos(angle) * 240,\n              y: Math.sin(angle) * 240\n            };\n          });\n        }\n        setPositions(initialPositions);\n      }, 100);\n    }\n  }, [concepts, positions, mapRef]);\n\n  // Handle starting to drag a concept\n  const handleMouseDown = (e, conceptId) => {\n    e.preventDefault();\n    e.stopPropagation();\n    const rect = e.currentTarget.getBoundingClientRect();\n    const mapRect = mapRef.current.getBoundingClientRect();\n    setDraggedConcept(conceptId);\n    setDragOffset({\n      x: e.clientX - (rect.left - mapRect.left),\n      y: e.clientY - (rect.top - mapRect.top)\n    });\n    document.addEventListener('mousemove', handleMouseMove);\n    document.addEventListener('mouseup', handleMouseUp);\n  };\n\n  // Handle dragging a concept\n  const handleMouseMove = e => {\n    if (!draggedConcept) return;\n    e.preventDefault();\n    const mapRect = mapRef.current.getBoundingClientRect();\n    const newX = e.clientX - mapRect.left - dragOffset.x;\n    const newY = e.clientY - mapRect.top - dragOffset.y;\n    setPositions(prev => ({\n      ...prev,\n      [draggedConcept]: {\n        x: newX,\n        y: newY\n      }\n    }));\n  };\n\n  // Handle dropping a concept\n  const handleMouseUp = () => {\n    setDraggedConcept(null);\n    document.removeEventListener('mousemove', handleMouseMove);\n    document.removeEventListener('mouseup', handleMouseUp);\n  };\n\n  // Toggle active/inactive state of a concept when clicked\n  const handleConceptClick = index => {\n    if (draggedConcept) return; // Don't toggle if we're dragging\n\n    setActiveNodes(prev => {\n      const newActiveNodes = [...prev];\n      newActiveNodes[index] = !newActiveNodes[index];\n      return newActiveNodes;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mind-map-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mind-map\",\n      ref: mapRef,\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        className: \"connections\",\n        children: concepts.map((_, index) => {\n          const pos = positions[`concept-${index}`];\n          if (!pos) return null;\n          return /*#__PURE__*/_jsxDEV(\"line\", {\n            x1: \"50%\",\n            y1: \"50%\",\n            x2: `calc(50% + ${pos.x}px)`,\n            y2: `calc(50% + ${pos.y}px)`,\n            className: !activeNodes[index] ? 'connection inactive' : 'connection'\n          }, `line-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"central-question\",\n        ref: centralRef,\n        children: centralQuestion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), concepts.map((concept, index) => {\n        const pos = positions[`concept-${index}`] || {\n          x: 0,\n          y: 0\n        };\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `concept ${!activeNodes[index] ? 'inactive' : ''} ${draggedConcept === `concept-${index}` ? 'dragging' : ''}`,\n          style: {\n            transform: `translate(calc(50% + ${pos.x}px), calc(50% + ${pos.y}px))`,\n            cursor: draggedConcept === `concept-${index}` ? 'grabbing' : 'grab'\n          },\n          ref: nodeRefs[`concept-${index}`],\n          onMouseDown: e => handleMouseDown(e, `concept-${index}`),\n          onClick: () => handleConceptClick(index),\n          children: concept\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n_s(MindMap, \"mmzHMPskRuPd+PHn8/kcq7xcnOk=\");\n_c = MindMap;\nexport default MindMap;\nvar _c;\n$RefreshReg$(_c, \"MindMap\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","MindMap","centralQuestion","concepts","_s","positions","setPositions","draggedConcept","setDraggedConcept","dragOffset","setDragOffset","x","y","activeNodes","setActiveNodes","map","_","i","nodeRefs","setNodeRefs","mapRef","centralRef","refs","forEach","index","createRef","Object","keys","length","current","setTimeout","initialPositions","angles","distance","angleRad","Math","PI","cos","sin","angle","handleMouseDown","e","conceptId","preventDefault","stopPropagation","rect","currentTarget","getBoundingClientRect","mapRect","clientX","left","clientY","top","document","addEventListener","handleMouseMove","handleMouseUp","newX","newY","prev","removeEventListener","handleConceptClick","newActiveNodes","className","children","ref","pos","x1","y1","x2","y2","fileName","_jsxFileName","lineNumber","columnNumber","concept","style","transform","cursor","onMouseDown","onClick","_c","$RefreshReg$"],"sources":["/Users/kei/AIdeator-LLM/frontend/src/components/MindMap.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport './MindMap.css';\n\nconst MindMap = ({ centralQuestion, concepts }) => {\n  const [positions, setPositions] = useState({});\n  const [draggedConcept, setDraggedConcept] = useState(null);\n  const [dragOffset, setDragOffset] = useState({ x: 0, y: 0 });\n  const [activeNodes, setActiveNodes] = useState(concepts.map((_, i) => true));\n  const [nodeRefs, setNodeRefs] = useState({});\n  const mapRef = useRef(null);\n  const centralRef = useRef(null);\n\n  // Create refs for each concept node\n  useEffect(() => {\n    const refs = {};\n    concepts.forEach((_, index) => {\n      refs[`concept-${index}`] = React.createRef();\n    });\n    setNodeRefs(refs);\n  }, [concepts]);\n\n  // Initialize positions to create a perfectly symmetrical star pattern\n  useEffect(() => {\n    if (Object.keys(positions).length === 0 && mapRef.current) {\n      // Wait for a brief moment to ensure dimensions are available\n      setTimeout(() => {\n        const initialPositions = {};\n        \n        // Position the concepts in a symmetrical star pattern around the central question\n        if (concepts.length === 5) {\n          // For 5 concepts, create a perfect star with evenly distributed arms\n          const angles = [\n            0,     // Top\n            144,   // Bottom Right\n            288,   // Bottom Left\n            72,    // Top Right\n            216    // Top Left\n          ];\n          \n          // Use the same distance for all concepts to ensure perfect symmetry\n          const distance = 240;\n          \n          // Calculate positions\n          concepts.forEach((_, index) => {\n            const angleRad = (angles[index] - 90) * Math.PI / 180; // -90 to start from top\n            initialPositions[`concept-${index}`] = {\n              x: Math.cos(angleRad) * distance,\n              y: Math.sin(angleRad) * distance\n            };\n          });\n        } else {\n          // For any other number of concepts, distribute evenly in a circle\n          concepts.forEach((_, index) => {\n            const angle = (2 * Math.PI * index) / concepts.length - Math.PI/2; // Start from top\n            initialPositions[`concept-${index}`] = {\n              x: Math.cos(angle) * 240,\n              y: Math.sin(angle) * 240\n            };\n          });\n        }\n        \n        setPositions(initialPositions);\n      }, 100);\n    }\n  }, [concepts, positions, mapRef]);\n\n  // Handle starting to drag a concept\n  const handleMouseDown = (e, conceptId) => {\n    e.preventDefault();\n    e.stopPropagation();\n    \n    const rect = e.currentTarget.getBoundingClientRect();\n    const mapRect = mapRef.current.getBoundingClientRect();\n    \n    setDraggedConcept(conceptId);\n    setDragOffset({\n      x: e.clientX - (rect.left - mapRect.left),\n      y: e.clientY - (rect.top - mapRect.top)\n    });\n    \n    document.addEventListener('mousemove', handleMouseMove);\n    document.addEventListener('mouseup', handleMouseUp);\n  };\n\n  // Handle dragging a concept\n  const handleMouseMove = (e) => {\n    if (!draggedConcept) return;\n    \n    e.preventDefault();\n    const mapRect = mapRef.current.getBoundingClientRect();\n    const newX = e.clientX - mapRect.left - dragOffset.x;\n    const newY = e.clientY - mapRect.top - dragOffset.y;\n\n    setPositions(prev => ({\n      ...prev,\n      [draggedConcept]: { x: newX, y: newY }\n    }));\n  };\n\n  // Handle dropping a concept\n  const handleMouseUp = () => {\n    setDraggedConcept(null);\n    document.removeEventListener('mousemove', handleMouseMove);\n    document.removeEventListener('mouseup', handleMouseUp);\n  };\n\n  // Toggle active/inactive state of a concept when clicked\n  const handleConceptClick = (index) => {\n    if (draggedConcept) return; // Don't toggle if we're dragging\n    \n    setActiveNodes(prev => {\n      const newActiveNodes = [...prev];\n      newActiveNodes[index] = !newActiveNodes[index];\n      return newActiveNodes;\n    });\n  };\n\n  return (\n    <div className=\"mind-map-container\">\n      <div \n        className=\"mind-map\" \n        ref={mapRef}\n      >\n        <svg className=\"connections\">\n          {concepts.map((_, index) => {\n            const pos = positions[`concept-${index}`];\n            if (!pos) return null;\n            \n            return (\n              <line\n                key={`line-${index}`}\n                x1=\"50%\"\n                y1=\"50%\"\n                x2={`calc(50% + ${pos.x}px)`}\n                y2={`calc(50% + ${pos.y}px)`}\n                className={!activeNodes[index] ? 'connection inactive' : 'connection'}\n              />\n            );\n          })}\n        </svg>\n        \n        <div className=\"central-question\" ref={centralRef}>\n          {centralQuestion}\n        </div>\n        \n        {concepts.map((concept, index) => {\n          const pos = positions[`concept-${index}`] || { x: 0, y: 0 };\n          return (\n            <div\n              key={index}\n              className={`concept ${!activeNodes[index] ? 'inactive' : ''} ${draggedConcept === `concept-${index}` ? 'dragging' : ''}`}\n              style={{\n                transform: `translate(calc(50% + ${pos.x}px), calc(50% + ${pos.y}px))`,\n                cursor: draggedConcept === `concept-${index}` ? 'grabbing' : 'grab'\n              }}\n              ref={nodeRefs[`concept-${index}`]}\n              onMouseDown={(e) => handleMouseDown(e, `concept-${index}`)}\n              onClick={() => handleConceptClick(index)}\n            >\n              {concept}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default MindMap; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}