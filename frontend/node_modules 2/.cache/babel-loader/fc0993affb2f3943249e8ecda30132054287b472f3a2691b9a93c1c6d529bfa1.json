{"ast":null,"code":"var _jsxFileName = \"/Users/kei/AIdeator-LLM/frontend/src/components/MindMap.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport './MindMap.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MindMap = ({\n  centralQuestion,\n  concepts\n}) => {\n  _s();\n  const [positions, setPositions] = useState({});\n  const [draggedConcept, setDraggedConcept] = useState(null);\n  const [dragOffset, setDragOffset] = useState({\n    x: 0,\n    y: 0\n  });\n  const [activeNodes, setActiveNodes] = useState(concepts.map(() => true));\n  const [expandedNodeIndex, setExpandedNodeIndex] = useState(null);\n  const [expandedConcepts, setExpandedConcepts] = useState([]);\n  const mapRef = useRef(null);\n  const conceptRefs = useRef([]);\n  const centralRef = useRef(null);\n\n  // Initialize refs for concept nodes\n  useEffect(() => {\n    conceptRefs.current = Array(concepts.length).fill().map(() => /*#__PURE__*/React.createRef());\n  }, [concepts.length]);\n\n  // Initialize positions in a balanced layout\n  useEffect(() => {\n    const initialPositions = {};\n    const centerX = window.innerWidth / 2;\n    const centerY = window.innerHeight / 2;\n    const radius = 250;\n    concepts.forEach((concept, index) => {\n      const angle = index / concepts.length * 2 * Math.PI;\n      initialPositions[concept.id] = {\n        x: centerX + radius * Math.cos(angle),\n        y: centerY + radius * Math.sin(angle)\n      };\n    });\n    setPositions(initialPositions);\n  }, [concepts]);\n\n  // Expand a node with 5 new child nodes\n  const expandNode = index => {\n    console.log(\"Expanding node\", index);\n    setExpandedNodeIndex(index);\n\n    // Create 5 new concept nodes with titles and descriptions\n    const newConcepts = [{\n      title: \"Fear of letting others down\",\n      description: \"Social and professional pressures can make people fear judgment from peers.\"\n    }, {\n      title: \"Concept B\",\n      description: \"A detailed description of concept B and its implications.\"\n    }, {\n      title: \"Concept C\",\n      description: \"A detailed description of concept C and its implications.\"\n    }, {\n      title: \"Concept D\",\n      description: \"A detailed description of concept D and its implications.\"\n    }, {\n      title: \"Concept E\",\n      description: \"A detailed description of concept E and its implications.\"\n    }];\n    setExpandedConcepts(newConcepts);\n\n    // Create positions for the new nodes following the parent's side\n    const parentPos = positions[`concept-${index}`];\n    const newPositions = {\n      ...positions\n    };\n\n    // Determine which side the parent node is on relative to the center\n    // This uses the standard layout: top, left, right, bottom-left, bottom-right\n    let direction;\n    if (index === 0) {\n      // Top node - place children above it\n      direction = 'top';\n    } else if (index === 1) {\n      // Left node - place children to the left\n      direction = 'left';\n    } else if (index === 2) {\n      // Right node - place children to the right\n      direction = 'right';\n    } else if (index === 3) {\n      // Bottom Left node - place children below and to the left\n      direction = 'bottom-left';\n    } else if (index === 4) {\n      // Bottom Right node - place children below and to the right\n      direction = 'bottom-right';\n    }\n    console.log(\"Direction for expanded nodes:\", direction);\n\n    // Position nodes based on the parent's position/direction\n    switch (direction) {\n      case 'top':\n        // Arrange horizontally above the parent\n        for (let i = 0; i < newConcepts.length; i++) {\n          const xOffset = (i - 2) * 120; // -240, -120, 0, 120, 240\n          newPositions[`expanded-${index}-${i}`] = {\n            x: parentPos.x + xOffset,\n            y: parentPos.y - 150\n          };\n        }\n        break;\n      case 'left':\n        // Arrange vertically to the left - increase spacing\n        for (let i = 0; i < newConcepts.length; i++) {\n          const yOffset = (i - 2) * 100; // -200, -100, 0, 100, 200\n          newPositions[`expanded-${index}-${i}`] = {\n            x: parentPos.x - 250,\n            y: parentPos.y + yOffset\n          };\n        }\n        break;\n      case 'right':\n        // Arrange vertically to the right - increase spacing\n        for (let i = 0; i < newConcepts.length; i++) {\n          const yOffset = (i - 2) * 100; // -200, -100, 0, 100, 200\n          newPositions[`expanded-${index}-${i}`] = {\n            x: parentPos.x + 250,\n            y: parentPos.y + yOffset\n          };\n        }\n        break;\n      case 'bottom-left':\n        // Arrange horizontally below and to the left\n        for (let i = 0; i < newConcepts.length; i++) {\n          const xOffset = (i - 2) * 120; // -240, -120, 0, 120, 240\n          newPositions[`expanded-${index}-${i}`] = {\n            x: parentPos.x - 100 + xOffset,\n            y: parentPos.y + 150\n          };\n        }\n        break;\n      case 'bottom-right':\n        // Arrange horizontally below and to the right\n        for (let i = 0; i < newConcepts.length; i++) {\n          const xOffset = (i - 2) * 120; // -240, -120, 0, 120, 240\n          newPositions[`expanded-${index}-${i}`] = {\n            x: parentPos.x + 100 + xOffset,\n            y: parentPos.y + 150\n          };\n        }\n        break;\n    }\n    setPositions(newPositions);\n  };\n\n  // Toggle node active state\n  const toggleNodeActive = index => {\n    // Count how many inactive nodes we currently have\n    const inactiveCount = activeNodes.filter(active => !active).length;\n\n    // If this node is already inactive, we can always make it active again\n    if (!activeNodes[index]) {\n      setActiveNodes(prev => {\n        const newActive = [...prev];\n        newActive[index] = true;\n        return newActive;\n      });\n      // If we're activating a node, clear expansion\n      if (expandedNodeIndex !== null) {\n        setExpandedNodeIndex(null);\n        setExpandedConcepts([]);\n      }\n      return;\n    }\n\n    // If this would be the 5th inactive node (all inactive), don't allow it\n    if (inactiveCount === 4) {\n      // Find the only remaining active node (which must be this one)\n      const activeNodeIndices = activeNodes.map((active, i) => active ? i : -1).filter(i => i >= 0);\n      if (activeNodeIndices.length === 1 && activeNodeIndices[0] === index) {\n        console.log(\"Can't deactivate the last node\");\n        return;\n      }\n    }\n\n    // Make this node inactive\n    setActiveNodes(prev => {\n      const newActive = [...prev];\n      newActive[index] = false;\n      return newActive;\n    });\n\n    // Check if we now have 4 inactive nodes (1 active)\n    const newInactiveCount = inactiveCount + 1;\n    if (newInactiveCount === 4) {\n      // Find the one remaining active node\n      const remainingActiveIndex = activeNodes.findIndex((active, i) => active && i !== index);\n      if (remainingActiveIndex !== -1) {\n        // Expand the remaining active node\n        expandNode(remainingActiveIndex);\n      }\n    }\n  };\n\n  // Render connections between nodes using SVG with HTML coordinates\n  const renderConnections = () => {\n    const centralX = window.innerWidth / 2;\n    const centralY = window.innerHeight / 2;\n    return /*#__PURE__*/_jsxDEV(\"svg\", {\n      className: \"connections\",\n      width: \"100%\",\n      height: \"100%\",\n      style: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        zIndex: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"defs\", {\n        children: /*#__PURE__*/_jsxDEV(\"marker\", {\n          id: \"arrowhead\",\n          markerWidth: \"10\",\n          markerHeight: \"7\",\n          refX: \"9\",\n          refY: \"3.5\",\n          orient: \"auto\",\n          children: /*#__PURE__*/_jsxDEV(\"polygon\", {\n            points: \"0 0, 10 3.5, 0 7\",\n            fill: \"#000\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), concepts.map(concept => {\n        const position = positions[concept.id];\n        if (!position) return null;\n        return /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: centralX,\n          y1: centralY,\n          x2: position.x,\n          y2: position.y,\n          stroke: \"#000\",\n          strokeWidth: \"2\",\n          markerEnd: \"url(#arrowhead)\"\n        }, concept.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Handle starting to drag a concept\n  const handleMouseDown = useCallback((e, id) => {\n    e.stopPropagation();\n    const rect = e.currentTarget.getBoundingClientRect();\n    setDraggedConcept(id);\n    setDragOffset({\n      x: e.clientX - rect.left - rect.width / 2,\n      y: e.clientY - rect.top - rect.height / 2\n    });\n  }, []);\n\n  // Handle dragging a concept\n  const handleMouseMove = useCallback(e => {\n    if (draggedConcept && mapRef.current) {\n      e.stopPropagation();\n      const mapRect = mapRef.current.getBoundingClientRect();\n      const newX = e.clientX - mapRect.left - dragOffset.x;\n      const newY = e.clientY - mapRect.top - dragOffset.y;\n\n      // Update position in state\n      setPositions(prev => ({\n        ...prev,\n        [draggedConcept]: {\n          x: newX,\n          y: newY\n        }\n      }));\n    }\n  }, [draggedConcept, dragOffset]);\n\n  // Handle dropping a concept\n  const handleMouseUp = useCallback(e => {\n    if (draggedConcept) {\n      e.stopPropagation();\n      setDraggedConcept(null);\n    }\n  }, [draggedConcept]);\n\n  // Use useEffect to ensure connections are updated when node dimensions change\n  useEffect(() => {\n    // Create a resize observer to detect size changes in nodes\n    const resizeObserver = new ResizeObserver(() => {\n      // Force a re-render to update connections\n      setPositions({\n        ...positions\n      });\n    });\n\n    // Observe central node\n    if (centralRef.current) {\n      resizeObserver.observe(centralRef.current);\n    }\n\n    // Observe all concept nodes\n    conceptRefs.current.forEach(ref => {\n      if (ref.current) {\n        resizeObserver.observe(ref.current);\n      }\n    });\n    return () => {\n      resizeObserver.disconnect();\n    };\n  }, [conceptRefs.current.length, centralRef.current, expandedNodeIndex]);\n\n  // Console log for debugging\n  console.log(\"Active nodes:\", activeNodes);\n  console.log(\"Expanded node index:\", expandedNodeIndex);\n  console.log(\"Expanded concepts:\", expandedConcepts);\n  console.log(\"Positions:\", positions);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mind-map-container\",\n    onMouseMove: handleMouseMove,\n    onMouseUp: handleMouseUp,\n    onMouseLeave: handleMouseUp,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapRef,\n      className: \"mind-map\",\n      children: [renderConnections(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"central-question\",\n        ref: centralRef,\n        children: centralQuestion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this), concepts.map((concept, index) => {\n        const pos = positions[`concept-${index}`] || {\n          x: 0,\n          y: 0\n        };\n        const isDragging = draggedConcept === `concept-${index}`;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `concept ${!activeNodes[index] ? 'inactive' : ''} ${isDragging ? 'dragging' : ''} ${index === expandedNodeIndex ? 'expanded' : ''}`,\n          style: {\n            left: `${pos.x}px`,\n            top: `${pos.y}px`,\n            cursor: isDragging ? 'grabbing' : 'grab'\n          },\n          ref: conceptRefs.current[index],\n          onMouseDown: e => handleMouseDown(e, `concept-${index}`),\n          onClick: e => {\n            e.stopPropagation();\n            if (!draggedConcept) {\n              toggleNodeActive(index);\n            }\n          },\n          children: concept\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 13\n        }, this);\n      }), expandedNodeIndex !== null && expandedConcepts.map((concept, index) => {\n        const pos = positions[`expanded-${expandedNodeIndex}-${index}`];\n        if (!pos) return null;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"concept expanded-child\",\n          \"data-expanded-index\": `${expandedNodeIndex}-${index}`,\n          style: {\n            left: `${pos.x}px`,\n            top: `${pos.y}px`,\n            border: '2px solid #000'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"concept-title\",\n            children: concept.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 15\n          }, this), concept.description && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"concept-description\",\n            children: concept.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"concept-icon\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              viewBox: \"0 0 24 24\",\n              width: \"24\",\n              height: \"24\",\n              children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                fill: \"none\",\n                d: \"M0 0h24v24H0z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M9.973 18h4.054c.132-1.202.745-2.194 1.74-3.277.113-.122.832-.867.917-.973a6 6 0 1 0-9.37-.002c.086.107.807.853.918.974.996 1.084 1.609 2.076 1.741 3.278zM14 20h-4v1h4v-1zm-8.246-5a8 8 0 1 1 12.49.002C17.624 15.774 16 17 16 18.5V21a2 2 0 0 1-2 2h-4a2 2 0 0 1-2-2v-2.5C8 17 6.375 15.774 5.754 15z\",\n                fill: \"rgba(0,0,0,0.6)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 15\n          }, this)]\n        }, `expanded-${expandedNodeIndex}-${index}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 312,\n    columnNumber: 5\n  }, this);\n};\n_s(MindMap, \"BHB1XFwtrsdD+lOLPgDw/+TUD1k=\");\n_c = MindMap;\nexport default MindMap;\nvar _c;\n$RefreshReg$(_c, \"MindMap\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","jsxDEV","_jsxDEV","MindMap","centralQuestion","concepts","_s","positions","setPositions","draggedConcept","setDraggedConcept","dragOffset","setDragOffset","x","y","activeNodes","setActiveNodes","map","expandedNodeIndex","setExpandedNodeIndex","expandedConcepts","setExpandedConcepts","mapRef","conceptRefs","centralRef","current","Array","length","fill","createRef","initialPositions","centerX","window","innerWidth","centerY","innerHeight","radius","forEach","concept","index","angle","Math","PI","id","cos","sin","expandNode","console","log","newConcepts","title","description","parentPos","newPositions","direction","i","xOffset","yOffset","toggleNodeActive","inactiveCount","filter","active","prev","newActive","activeNodeIndices","newInactiveCount","remainingActiveIndex","findIndex","renderConnections","centralX","centralY","className","width","height","style","position","top","left","zIndex","children","markerWidth","markerHeight","refX","refY","orient","points","fileName","_jsxFileName","lineNumber","columnNumber","x1","y1","x2","y2","stroke","strokeWidth","markerEnd","handleMouseDown","e","stopPropagation","rect","currentTarget","getBoundingClientRect","clientX","clientY","handleMouseMove","mapRect","newX","newY","handleMouseUp","resizeObserver","ResizeObserver","observe","ref","disconnect","onMouseMove","onMouseUp","onMouseLeave","pos","isDragging","cursor","onMouseDown","onClick","border","xmlns","viewBox","d","_c","$RefreshReg$"],"sources":["/Users/kei/AIdeator-LLM/frontend/src/components/MindMap.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport './MindMap.css';\n\nconst MindMap = ({ centralQuestion, concepts }) => {\n  const [positions, setPositions] = useState({});\n  const [draggedConcept, setDraggedConcept] = useState(null);\n  const [dragOffset, setDragOffset] = useState({ x: 0, y: 0 });\n  const [activeNodes, setActiveNodes] = useState(concepts.map(() => true));\n  const [expandedNodeIndex, setExpandedNodeIndex] = useState(null);\n  const [expandedConcepts, setExpandedConcepts] = useState([]);\n  const mapRef = useRef(null);\n  const conceptRefs = useRef([]);\n  const centralRef = useRef(null);\n\n  // Initialize refs for concept nodes\n  useEffect(() => {\n    conceptRefs.current = Array(concepts.length).fill().map(() => React.createRef());\n  }, [concepts.length]);\n\n  // Initialize positions in a balanced layout\n  useEffect(() => {\n    const initialPositions = {};\n    const centerX = window.innerWidth / 2;\n    const centerY = window.innerHeight / 2;\n    \n    const radius = 250;\n    concepts.forEach((concept, index) => {\n      const angle = (index / concepts.length) * 2 * Math.PI;\n      initialPositions[concept.id] = {\n        x: centerX + radius * Math.cos(angle),\n        y: centerY + radius * Math.sin(angle)\n      };\n    });\n    \n    setPositions(initialPositions);\n  }, [concepts]);\n\n  // Expand a node with 5 new child nodes\n  const expandNode = (index) => {\n    console.log(\"Expanding node\", index);\n    setExpandedNodeIndex(index);\n    \n    // Create 5 new concept nodes with titles and descriptions\n    const newConcepts = [\n      {\n        title: \"Fear of letting others down\",\n        description: \"Social and professional pressures can make people fear judgment from peers.\"\n      },\n      {\n        title: \"Concept B\",\n        description: \"A detailed description of concept B and its implications.\"\n      },\n      {\n        title: \"Concept C\",\n        description: \"A detailed description of concept C and its implications.\"\n      },\n      {\n        title: \"Concept D\",\n        description: \"A detailed description of concept D and its implications.\"\n      },\n      {\n        title: \"Concept E\",\n        description: \"A detailed description of concept E and its implications.\"\n      }\n    ];\n    \n    setExpandedConcepts(newConcepts);\n    \n    // Create positions for the new nodes following the parent's side\n    const parentPos = positions[`concept-${index}`];\n    const newPositions = { ...positions };\n    \n    // Determine which side the parent node is on relative to the center\n    // This uses the standard layout: top, left, right, bottom-left, bottom-right\n    let direction;\n    \n    if (index === 0) {\n      // Top node - place children above it\n      direction = 'top';\n    } else if (index === 1) {\n      // Left node - place children to the left\n      direction = 'left';\n    } else if (index === 2) {\n      // Right node - place children to the right\n      direction = 'right';\n    } else if (index === 3) {\n      // Bottom Left node - place children below and to the left\n      direction = 'bottom-left';\n    } else if (index === 4) {\n      // Bottom Right node - place children below and to the right\n      direction = 'bottom-right';\n    }\n    \n    console.log(\"Direction for expanded nodes:\", direction);\n    \n    // Position nodes based on the parent's position/direction\n    switch (direction) {\n      case 'top':\n        // Arrange horizontally above the parent\n        for (let i = 0; i < newConcepts.length; i++) {\n          const xOffset = (i - 2) * 120; // -240, -120, 0, 120, 240\n          newPositions[`expanded-${index}-${i}`] = {\n            x: parentPos.x + xOffset,\n            y: parentPos.y - 150\n          };\n        }\n        break;\n        \n      case 'left':\n        // Arrange vertically to the left - increase spacing\n        for (let i = 0; i < newConcepts.length; i++) {\n          const yOffset = (i - 2) * 100; // -200, -100, 0, 100, 200\n          newPositions[`expanded-${index}-${i}`] = {\n            x: parentPos.x - 250,\n            y: parentPos.y + yOffset\n          };\n        }\n        break;\n        \n      case 'right':\n        // Arrange vertically to the right - increase spacing\n        for (let i = 0; i < newConcepts.length; i++) {\n          const yOffset = (i - 2) * 100; // -200, -100, 0, 100, 200\n          newPositions[`expanded-${index}-${i}`] = {\n            x: parentPos.x + 250,\n            y: parentPos.y + yOffset\n          };\n        }\n        break;\n        \n      case 'bottom-left':\n        // Arrange horizontally below and to the left\n        for (let i = 0; i < newConcepts.length; i++) {\n          const xOffset = (i - 2) * 120; // -240, -120, 0, 120, 240\n          newPositions[`expanded-${index}-${i}`] = {\n            x: parentPos.x - 100 + xOffset,\n            y: parentPos.y + 150\n          };\n        }\n        break;\n        \n      case 'bottom-right':\n        // Arrange horizontally below and to the right\n        for (let i = 0; i < newConcepts.length; i++) {\n          const xOffset = (i - 2) * 120; // -240, -120, 0, 120, 240\n          newPositions[`expanded-${index}-${i}`] = {\n            x: parentPos.x + 100 + xOffset,\n            y: parentPos.y + 150\n          };\n        }\n        break;\n    }\n    \n    setPositions(newPositions);\n  };\n\n  // Toggle node active state\n  const toggleNodeActive = (index) => {\n    // Count how many inactive nodes we currently have\n    const inactiveCount = activeNodes.filter(active => !active).length;\n    \n    // If this node is already inactive, we can always make it active again\n    if (!activeNodes[index]) {\n      setActiveNodes(prev => {\n        const newActive = [...prev];\n        newActive[index] = true;\n        return newActive;\n      });\n      // If we're activating a node, clear expansion\n      if (expandedNodeIndex !== null) {\n        setExpandedNodeIndex(null);\n        setExpandedConcepts([]);\n      }\n      return;\n    }\n    \n    // If this would be the 5th inactive node (all inactive), don't allow it\n    if (inactiveCount === 4) {\n      // Find the only remaining active node (which must be this one)\n      const activeNodeIndices = activeNodes.map((active, i) => active ? i : -1).filter(i => i >= 0);\n      if (activeNodeIndices.length === 1 && activeNodeIndices[0] === index) {\n        console.log(\"Can't deactivate the last node\");\n        return;\n      }\n    }\n    \n    // Make this node inactive\n    setActiveNodes(prev => {\n      const newActive = [...prev];\n      newActive[index] = false;\n      return newActive;\n    });\n    \n    // Check if we now have 4 inactive nodes (1 active)\n    const newInactiveCount = inactiveCount + 1;\n    if (newInactiveCount === 4) {\n      // Find the one remaining active node\n      const remainingActiveIndex = activeNodes.findIndex((active, i) => active && i !== index);\n      if (remainingActiveIndex !== -1) {\n        // Expand the remaining active node\n        expandNode(remainingActiveIndex);\n      }\n    }\n  };\n  \n  // Render connections between nodes using SVG with HTML coordinates\n  const renderConnections = () => {\n    const centralX = window.innerWidth / 2;\n    const centralY = window.innerHeight / 2;\n    \n    return (\n      <svg className=\"connections\" width=\"100%\" height=\"100%\" style={{ position: 'absolute', top: 0, left: 0, zIndex: 1 }}>\n        <defs>\n          <marker \n            id=\"arrowhead\" \n            markerWidth=\"10\" \n            markerHeight=\"7\" \n            refX=\"9\" \n            refY=\"3.5\" \n            orient=\"auto\">\n            <polygon points=\"0 0, 10 3.5, 0 7\" fill=\"#000\" />\n          </marker>\n        </defs>\n        {concepts.map(concept => {\n          const position = positions[concept.id];\n          if (!position) return null;\n          \n          return (\n            <line\n              key={concept.id}\n              x1={centralX}\n              y1={centralY}\n              x2={position.x}\n              y2={position.y}\n              stroke=\"#000\"\n              strokeWidth=\"2\"\n              markerEnd=\"url(#arrowhead)\"\n            />\n          );\n        })}\n      </svg>\n    );\n  };\n\n  // Handle starting to drag a concept\n  const handleMouseDown = useCallback((e, id) => {\n    e.stopPropagation();\n    const rect = e.currentTarget.getBoundingClientRect();\n    setDraggedConcept(id);\n    setDragOffset({\n      x: e.clientX - rect.left - rect.width / 2,\n      y: e.clientY - rect.top - rect.height / 2\n    });\n  }, []);\n\n  // Handle dragging a concept\n  const handleMouseMove = useCallback((e) => {\n    if (draggedConcept && mapRef.current) {\n      e.stopPropagation();\n      const mapRect = mapRef.current.getBoundingClientRect();\n      const newX = e.clientX - mapRect.left - dragOffset.x;\n      const newY = e.clientY - mapRect.top - dragOffset.y;\n\n      // Update position in state\n      setPositions(prev => ({\n        ...prev,\n        [draggedConcept]: { x: newX, y: newY }\n      }));\n    }\n  }, [draggedConcept, dragOffset]);\n\n  // Handle dropping a concept\n  const handleMouseUp = useCallback((e) => {\n    if (draggedConcept) {\n      e.stopPropagation();\n      setDraggedConcept(null);\n    }\n  }, [draggedConcept]);\n\n  // Use useEffect to ensure connections are updated when node dimensions change\n  useEffect(() => {\n    // Create a resize observer to detect size changes in nodes\n    const resizeObserver = new ResizeObserver(() => {\n      // Force a re-render to update connections\n      setPositions({...positions});\n    });\n    \n    // Observe central node\n    if (centralRef.current) {\n      resizeObserver.observe(centralRef.current);\n    }\n    \n    // Observe all concept nodes\n    conceptRefs.current.forEach(ref => {\n      if (ref.current) {\n        resizeObserver.observe(ref.current);\n      }\n    });\n    \n    return () => {\n      resizeObserver.disconnect();\n    };\n  }, [conceptRefs.current.length, centralRef.current, expandedNodeIndex]);\n\n  // Console log for debugging\n  console.log(\"Active nodes:\", activeNodes);\n  console.log(\"Expanded node index:\", expandedNodeIndex);\n  console.log(\"Expanded concepts:\", expandedConcepts);\n  console.log(\"Positions:\", positions);\n\n  return (\n    <div \n      className=\"mind-map-container\"\n      onMouseMove={handleMouseMove}\n      onMouseUp={handleMouseUp}\n      onMouseLeave={handleMouseUp}\n    >\n      <div ref={mapRef} className=\"mind-map\">\n        {renderConnections()}\n        \n        <div className=\"central-question\" ref={centralRef}>\n          {centralQuestion}\n        </div>\n        \n        {concepts.map((concept, index) => {\n          const pos = positions[`concept-${index}`] || { x: 0, y: 0 };\n          const isDragging = draggedConcept === `concept-${index}`;\n          \n          return (\n            <div\n              key={index}\n              className={`concept ${!activeNodes[index] ? 'inactive' : ''} ${isDragging ? 'dragging' : ''} ${index === expandedNodeIndex ? 'expanded' : ''}`}\n              style={{\n                left: `${pos.x}px`,\n                top: `${pos.y}px`,\n                cursor: isDragging ? 'grabbing' : 'grab'\n              }}\n              ref={conceptRefs.current[index]}\n              onMouseDown={(e) => handleMouseDown(e, `concept-${index}`)}\n              onClick={(e) => {\n                e.stopPropagation();\n                if (!draggedConcept) {\n                  toggleNodeActive(index);\n                }\n              }}\n            >\n              {concept}\n            </div>\n          );\n        })}\n        \n        {expandedNodeIndex !== null && expandedConcepts.map((concept, index) => {\n          const pos = positions[`expanded-${expandedNodeIndex}-${index}`];\n          if (!pos) return null;\n          \n          return (\n            <div\n              key={`expanded-${expandedNodeIndex}-${index}`}\n              className=\"concept expanded-child\"\n              data-expanded-index={`${expandedNodeIndex}-${index}`}\n              style={{\n                left: `${pos.x}px`,\n                top: `${pos.y}px`,\n                border: '2px solid #000'\n              }}\n            >\n              <div className=\"concept-title\">{concept.title}</div>\n              {concept.description && (\n                <div className=\"concept-description\">{concept.description}</div>\n              )}\n              <div className=\"concept-icon\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n                  <path fill=\"none\" d=\"M0 0h24v24H0z\"/>\n                  <path d=\"M9.973 18h4.054c.132-1.202.745-2.194 1.74-3.277.113-.122.832-.867.917-.973a6 6 0 1 0-9.37-.002c.086.107.807.853.918.974.996 1.084 1.609 2.076 1.741 3.278zM14 20h-4v1h4v-1zm-8.246-5a8 8 0 1 1 12.49.002C17.624 15.774 16 17 16 18.5V21a2 2 0 0 1-2 2h-4a2 2 0 0 1-2-2v-2.5C8 17 6.375 15.774 5.754 15z\" fill=\"rgba(0,0,0,0.6)\"/>\n                </svg>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default MindMap; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}