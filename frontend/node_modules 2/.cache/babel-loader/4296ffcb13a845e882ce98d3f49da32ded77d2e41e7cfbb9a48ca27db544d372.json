{"ast":null,"code":"var _jsxFileName = \"/Users/kei/AIdeator-LLM/frontend/src/components/MindMap.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport './MindMap.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MindMap = ({\n  centralQuestion,\n  concepts\n}) => {\n  _s();\n  const [positions, setPositions] = useState({});\n  const [dragging, setDragging] = useState(null);\n  const [dragOffset, setDragOffset] = useState({\n    x: 0,\n    y: 0\n  });\n  const [activeNodes, setActiveNodes] = useState(concepts.map(() => true));\n  const [expandedNodeIndex, setExpandedNodeIndex] = useState(null);\n  const [expandedConcepts, setExpandedConcepts] = useState([]);\n  const mindMapRef = useRef(null);\n  const svgRef = useRef(null);\n  const conceptRefs = useRef([]);\n  const centralRef = useRef(null);\n\n  // Initialize refs for concept nodes\n  useEffect(() => {\n    conceptRefs.current = Array(concepts.length).fill().map(() => /*#__PURE__*/React.createRef());\n  }, [concepts.length]);\n\n  // Initialize positions in a circle around the center\n  useEffect(() => {\n    const initialPositions = {};\n    const centerX = window.innerWidth / 2;\n    const centerY = window.innerHeight / 2;\n    const radius = Math.min(window.innerWidth, window.innerHeight) * 0.25;\n    concepts.forEach((concept, index) => {\n      const angle = index * 2 * Math.PI / concepts.length;\n      const x = centerX + radius * Math.cos(angle);\n      const y = centerY + radius * Math.sin(angle);\n      initialPositions[concept.id] = {\n        x,\n        y\n      };\n    });\n    setPositions(initialPositions);\n  }, [concepts]);\n\n  // Expand a node with 5 new child nodes\n  const expandNode = index => {\n    console.log(\"Expanding node\", index);\n    setExpandedNodeIndex(index);\n\n    // Create 5 new concept nodes with titles and descriptions\n    const newConcepts = [{\n      title: \"Fear of letting others down\",\n      description: \"Social and professional pressures can make people fear judgment from peers.\"\n    }, {\n      title: \"Concept B\",\n      description: \"A detailed description of concept B and its implications.\"\n    }, {\n      title: \"Concept C\",\n      description: \"A detailed description of concept C and its implications.\"\n    }, {\n      title: \"Concept D\",\n      description: \"A detailed description of concept D and its implications.\"\n    }, {\n      title: \"Concept E\",\n      description: \"A detailed description of concept E and its implications.\"\n    }];\n    setExpandedConcepts(newConcepts);\n\n    // Create positions for the new nodes following the parent's side\n    const parentPos = positions[`concept-${index}`];\n    const newPositions = {\n      ...positions\n    };\n\n    // Determine which side the parent node is on relative to the center\n    // This uses the standard layout: top, left, right, bottom-left, bottom-right\n    let direction;\n    if (index === 0) {\n      // Top node - place children above it\n      direction = 'top';\n    } else if (index === 1) {\n      // Left node - place children to the left\n      direction = 'left';\n    } else if (index === 2) {\n      // Right node - place children to the right\n      direction = 'right';\n    } else if (index === 3) {\n      // Bottom Left node - place children below and to the left\n      direction = 'bottom-left';\n    } else if (index === 4) {\n      // Bottom Right node - place children below and to the right\n      direction = 'bottom-right';\n    }\n    console.log(\"Direction for expanded nodes:\", direction);\n\n    // Position nodes based on the parent's position/direction\n    switch (direction) {\n      case 'top':\n        // Arrange horizontally above the parent\n        for (let i = 0; i < newConcepts.length; i++) {\n          const xOffset = (i - 2) * 120; // -240, -120, 0, 120, 240\n          newPositions[`expanded-${index}-${i}`] = {\n            x: parentPos.x + xOffset,\n            y: parentPos.y - 150\n          };\n        }\n        break;\n      case 'left':\n        // Arrange vertically to the left - increase spacing\n        for (let i = 0; i < newConcepts.length; i++) {\n          const yOffset = (i - 2) * 100; // -200, -100, 0, 100, 200\n          newPositions[`expanded-${index}-${i}`] = {\n            x: parentPos.x - 250,\n            y: parentPos.y + yOffset\n          };\n        }\n        break;\n      case 'right':\n        // Arrange vertically to the right - increase spacing\n        for (let i = 0; i < newConcepts.length; i++) {\n          const yOffset = (i - 2) * 100; // -200, -100, 0, 100, 200\n          newPositions[`expanded-${index}-${i}`] = {\n            x: parentPos.x + 250,\n            y: parentPos.y + yOffset\n          };\n        }\n        break;\n      case 'bottom-left':\n        // Arrange horizontally below and to the left\n        for (let i = 0; i < newConcepts.length; i++) {\n          const xOffset = (i - 2) * 120; // -240, -120, 0, 120, 240\n          newPositions[`expanded-${index}-${i}`] = {\n            x: parentPos.x - 100 + xOffset,\n            y: parentPos.y + 150\n          };\n        }\n        break;\n      case 'bottom-right':\n        // Arrange horizontally below and to the right\n        for (let i = 0; i < newConcepts.length; i++) {\n          const xOffset = (i - 2) * 120; // -240, -120, 0, 120, 240\n          newPositions[`expanded-${index}-${i}`] = {\n            x: parentPos.x + 100 + xOffset,\n            y: parentPos.y + 150\n          };\n        }\n        break;\n    }\n    setPositions(newPositions);\n  };\n\n  // Toggle node active state\n  const toggleNodeActive = index => {\n    // Count how many inactive nodes we currently have\n    const inactiveCount = activeNodes.filter(active => !active).length;\n\n    // If this node is already inactive, we can always make it active again\n    if (!activeNodes[index]) {\n      setActiveNodes(prev => {\n        const newActive = [...prev];\n        newActive[index] = true;\n        return newActive;\n      });\n      // If we're activating a node, clear expansion\n      if (expandedNodeIndex !== null) {\n        setExpandedNodeIndex(null);\n        setExpandedConcepts([]);\n      }\n      return;\n    }\n\n    // If this would be the 5th inactive node (all inactive), don't allow it\n    if (inactiveCount === 4) {\n      // Find the only remaining active node (which must be this one)\n      const activeNodeIndices = activeNodes.map((active, i) => active ? i : -1).filter(i => i >= 0);\n      if (activeNodeIndices.length === 1 && activeNodeIndices[0] === index) {\n        console.log(\"Can't deactivate the last node\");\n        return;\n      }\n    }\n\n    // Make this node inactive\n    setActiveNodes(prev => {\n      const newActive = [...prev];\n      newActive[index] = false;\n      return newActive;\n    });\n\n    // Check if we now have 4 inactive nodes (1 active)\n    const newInactiveCount = inactiveCount + 1;\n    if (newInactiveCount === 4) {\n      // Find the one remaining active node\n      const remainingActiveIndex = activeNodes.findIndex((active, i) => active && i !== index);\n      if (remainingActiveIndex !== -1) {\n        // Expand the remaining active node\n        expandNode(remainingActiveIndex);\n      }\n    }\n  };\n  const handleMouseDown = useCallback((e, id) => {\n    e.stopPropagation();\n    const element = e.currentTarget;\n    const rect = element.getBoundingClientRect();\n\n    // Calculate offset from the center of the element\n    const offsetX = e.clientX - (rect.left + rect.width / 2);\n    const offsetY = e.clientY - (rect.top + rect.height / 2);\n    setDragging(id);\n    setDragOffset({\n      x: offsetX,\n      y: offsetY\n    });\n    document.addEventListener('mousemove', handleMouseMove);\n    document.addEventListener('mouseup', handleMouseUp);\n  }, []);\n  const handleMouseMove = useCallback(e => {\n    if (dragging) {\n      setPositions(prevPositions => ({\n        ...prevPositions,\n        [dragging]: {\n          x: e.clientX - dragOffset.x,\n          y: e.clientY - dragOffset.y\n        }\n      }));\n    }\n  }, [dragging, dragOffset]);\n  const handleMouseUp = useCallback(() => {\n    setDragging(null);\n    document.removeEventListener('mousemove', handleMouseMove);\n    document.removeEventListener('mouseup', handleMouseUp);\n  }, [handleMouseMove]);\n\n  // Clean up event listeners\n  useEffect(() => {\n    return () => {\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n    };\n  }, [handleMouseMove, handleMouseUp]);\n  const renderConnections = () => {\n    if (!centralRef.current) return null;\n    const centralRect = centralRef.current.getBoundingClientRect();\n    const centerX = centralRect.left + centralRect.width / 2;\n    const centerY = centralRect.top + centralRect.height / 2;\n    return concepts.map(concept => {\n      const pos = positions[concept.id];\n      if (!pos) return null;\n      return /*#__PURE__*/_jsxDEV(\"line\", {\n        x1: centerX,\n        y1: centerY,\n        x2: pos.x,\n        y2: pos.y,\n        className: \"connection\"\n      }, `connection-${concept.id}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  // Use useEffect to ensure connections are updated when node dimensions change\n  useEffect(() => {\n    // Create a resize observer to detect size changes in nodes\n    const resizeObserver = new ResizeObserver(() => {\n      // Force a re-render to update connections\n      setPositions({\n        ...positions\n      });\n    });\n\n    // Observe central node\n    if (centralRef.current) {\n      resizeObserver.observe(centralRef.current);\n    }\n\n    // Observe all concept nodes\n    conceptRefs.current.forEach(ref => {\n      if (ref.current) {\n        resizeObserver.observe(ref.current);\n      }\n    });\n    return () => {\n      resizeObserver.disconnect();\n    };\n  }, [conceptRefs.current.length, centralRef.current, expandedNodeIndex]);\n\n  // Console log for debugging\n  console.log(\"Active nodes:\", activeNodes);\n  console.log(\"Expanded node index:\", expandedNodeIndex);\n  console.log(\"Expanded concepts:\", expandedConcepts);\n  console.log(\"Positions:\", positions);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mind-map-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mind-map\",\n      ref: mindMapRef,\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        className: \"connections\",\n        ref: svgRef,\n        children: renderConnections()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"central-question\",\n        ref: centralRef,\n        children: centralQuestion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this), concepts.map((concept, index) => {\n        const pos = positions[`concept-${index}`] || {\n          x: 0,\n          y: 0\n        };\n        const isDragging = dragging === `concept-${index}`;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `concept ${!activeNodes[index] ? 'inactive' : ''} ${isDragging ? 'dragging' : ''} ${index === expandedNodeIndex ? 'expanded' : ''}`,\n          style: {\n            left: `${pos.x}px`,\n            top: `${pos.y}px`,\n            cursor: isDragging ? 'grabbing' : 'grab'\n          },\n          ref: conceptRefs.current[index],\n          onMouseDown: e => handleMouseDown(e, `concept-${index}`),\n          onClick: e => {\n            e.stopPropagation();\n            if (!dragging) {\n              toggleNodeActive(index);\n            }\n          },\n          children: concept\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 13\n        }, this);\n      }), expandedNodeIndex !== null && expandedConcepts.map((concept, index) => {\n        const pos = positions[`expanded-${expandedNodeIndex}-${index}`];\n        if (!pos) return null;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"concept expanded-child\",\n          \"data-expanded-index\": `${expandedNodeIndex}-${index}`,\n          style: {\n            left: `${pos.x}px`,\n            top: `${pos.y}px`,\n            border: '2px solid #000'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"concept-title\",\n            children: concept.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 15\n          }, this), concept.description && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"concept-description\",\n            children: concept.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"concept-icon\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              viewBox: \"0 0 24 24\",\n              width: \"24\",\n              height: \"24\",\n              children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                fill: \"none\",\n                d: \"M0 0h24v24H0z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M9.973 18h4.054c.132-1.202.745-2.194 1.74-3.277.113-.122.832-.867.917-.973a6 6 0 1 0-9.37-.002c.086.107.807.853.918.974.996 1.084 1.609 2.076 1.741 3.278zM14 20h-4v1h4v-1zm-8.246-5a8 8 0 1 1 12.49.002C17.624 15.774 16 17 16 18.5V21a2 2 0 0 1-2 2h-4a2 2 0 0 1-2-2v-2.5C8 17 6.375 15.774 5.754 15z\",\n                fill: \"rgba(0,0,0,0.6)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 15\n          }, this)]\n        }, `expanded-${expandedNodeIndex}-${index}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 306,\n    columnNumber: 5\n  }, this);\n};\n_s(MindMap, \"DNDuddkHPnQJLdFvVpVdDhuFYIM=\");\n_c = MindMap;\nexport default MindMap;\nvar _c;\n$RefreshReg$(_c, \"MindMap\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","jsxDEV","_jsxDEV","MindMap","centralQuestion","concepts","_s","positions","setPositions","dragging","setDragging","dragOffset","setDragOffset","x","y","activeNodes","setActiveNodes","map","expandedNodeIndex","setExpandedNodeIndex","expandedConcepts","setExpandedConcepts","mindMapRef","svgRef","conceptRefs","centralRef","current","Array","length","fill","createRef","initialPositions","centerX","window","innerWidth","centerY","innerHeight","radius","Math","min","forEach","concept","index","angle","PI","cos","sin","id","expandNode","console","log","newConcepts","title","description","parentPos","newPositions","direction","i","xOffset","yOffset","toggleNodeActive","inactiveCount","filter","active","prev","newActive","activeNodeIndices","newInactiveCount","remainingActiveIndex","findIndex","handleMouseDown","e","stopPropagation","element","currentTarget","rect","getBoundingClientRect","offsetX","clientX","left","width","offsetY","clientY","top","height","document","addEventListener","handleMouseMove","handleMouseUp","prevPositions","removeEventListener","renderConnections","centralRect","pos","x1","y1","x2","y2","className","fileName","_jsxFileName","lineNumber","columnNumber","resizeObserver","ResizeObserver","observe","ref","disconnect","children","isDragging","style","cursor","onMouseDown","onClick","border","xmlns","viewBox","d","_c","$RefreshReg$"],"sources":["/Users/kei/AIdeator-LLM/frontend/src/components/MindMap.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport './MindMap.css';\n\nconst MindMap = ({ centralQuestion, concepts }) => {\n  const [positions, setPositions] = useState({});\n  const [dragging, setDragging] = useState(null);\n  const [dragOffset, setDragOffset] = useState({ x: 0, y: 0 });\n  const [activeNodes, setActiveNodes] = useState(concepts.map(() => true));\n  const [expandedNodeIndex, setExpandedNodeIndex] = useState(null);\n  const [expandedConcepts, setExpandedConcepts] = useState([]);\n  const mindMapRef = useRef(null);\n  const svgRef = useRef(null);\n  const conceptRefs = useRef([]);\n  const centralRef = useRef(null);\n\n  // Initialize refs for concept nodes\n  useEffect(() => {\n    conceptRefs.current = Array(concepts.length).fill().map(() => React.createRef());\n  }, [concepts.length]);\n\n  // Initialize positions in a circle around the center\n  useEffect(() => {\n    const initialPositions = {};\n    const centerX = window.innerWidth / 2;\n    const centerY = window.innerHeight / 2;\n    const radius = Math.min(window.innerWidth, window.innerHeight) * 0.25;\n\n    concepts.forEach((concept, index) => {\n      const angle = (index * 2 * Math.PI) / concepts.length;\n      const x = centerX + radius * Math.cos(angle);\n      const y = centerY + radius * Math.sin(angle);\n      \n      initialPositions[concept.id] = { x, y };\n    });\n\n    setPositions(initialPositions);\n  }, [concepts]);\n\n  // Expand a node with 5 new child nodes\n  const expandNode = (index) => {\n    console.log(\"Expanding node\", index);\n    setExpandedNodeIndex(index);\n    \n    // Create 5 new concept nodes with titles and descriptions\n    const newConcepts = [\n      {\n        title: \"Fear of letting others down\",\n        description: \"Social and professional pressures can make people fear judgment from peers.\"\n      },\n      {\n        title: \"Concept B\",\n        description: \"A detailed description of concept B and its implications.\"\n      },\n      {\n        title: \"Concept C\",\n        description: \"A detailed description of concept C and its implications.\"\n      },\n      {\n        title: \"Concept D\",\n        description: \"A detailed description of concept D and its implications.\"\n      },\n      {\n        title: \"Concept E\",\n        description: \"A detailed description of concept E and its implications.\"\n      }\n    ];\n    \n    setExpandedConcepts(newConcepts);\n    \n    // Create positions for the new nodes following the parent's side\n    const parentPos = positions[`concept-${index}`];\n    const newPositions = { ...positions };\n    \n    // Determine which side the parent node is on relative to the center\n    // This uses the standard layout: top, left, right, bottom-left, bottom-right\n    let direction;\n    \n    if (index === 0) {\n      // Top node - place children above it\n      direction = 'top';\n    } else if (index === 1) {\n      // Left node - place children to the left\n      direction = 'left';\n    } else if (index === 2) {\n      // Right node - place children to the right\n      direction = 'right';\n    } else if (index === 3) {\n      // Bottom Left node - place children below and to the left\n      direction = 'bottom-left';\n    } else if (index === 4) {\n      // Bottom Right node - place children below and to the right\n      direction = 'bottom-right';\n    }\n    \n    console.log(\"Direction for expanded nodes:\", direction);\n    \n    // Position nodes based on the parent's position/direction\n    switch (direction) {\n      case 'top':\n        // Arrange horizontally above the parent\n        for (let i = 0; i < newConcepts.length; i++) {\n          const xOffset = (i - 2) * 120; // -240, -120, 0, 120, 240\n          newPositions[`expanded-${index}-${i}`] = {\n            x: parentPos.x + xOffset,\n            y: parentPos.y - 150\n          };\n        }\n        break;\n        \n      case 'left':\n        // Arrange vertically to the left - increase spacing\n        for (let i = 0; i < newConcepts.length; i++) {\n          const yOffset = (i - 2) * 100; // -200, -100, 0, 100, 200\n          newPositions[`expanded-${index}-${i}`] = {\n            x: parentPos.x - 250,\n            y: parentPos.y + yOffset\n          };\n        }\n        break;\n        \n      case 'right':\n        // Arrange vertically to the right - increase spacing\n        for (let i = 0; i < newConcepts.length; i++) {\n          const yOffset = (i - 2) * 100; // -200, -100, 0, 100, 200\n          newPositions[`expanded-${index}-${i}`] = {\n            x: parentPos.x + 250,\n            y: parentPos.y + yOffset\n          };\n        }\n        break;\n        \n      case 'bottom-left':\n        // Arrange horizontally below and to the left\n        for (let i = 0; i < newConcepts.length; i++) {\n          const xOffset = (i - 2) * 120; // -240, -120, 0, 120, 240\n          newPositions[`expanded-${index}-${i}`] = {\n            x: parentPos.x - 100 + xOffset,\n            y: parentPos.y + 150\n          };\n        }\n        break;\n        \n      case 'bottom-right':\n        // Arrange horizontally below and to the right\n        for (let i = 0; i < newConcepts.length; i++) {\n          const xOffset = (i - 2) * 120; // -240, -120, 0, 120, 240\n          newPositions[`expanded-${index}-${i}`] = {\n            x: parentPos.x + 100 + xOffset,\n            y: parentPos.y + 150\n          };\n        }\n        break;\n    }\n    \n    setPositions(newPositions);\n  };\n\n  // Toggle node active state\n  const toggleNodeActive = (index) => {\n    // Count how many inactive nodes we currently have\n    const inactiveCount = activeNodes.filter(active => !active).length;\n    \n    // If this node is already inactive, we can always make it active again\n    if (!activeNodes[index]) {\n      setActiveNodes(prev => {\n        const newActive = [...prev];\n        newActive[index] = true;\n        return newActive;\n      });\n      // If we're activating a node, clear expansion\n      if (expandedNodeIndex !== null) {\n        setExpandedNodeIndex(null);\n        setExpandedConcepts([]);\n      }\n      return;\n    }\n    \n    // If this would be the 5th inactive node (all inactive), don't allow it\n    if (inactiveCount === 4) {\n      // Find the only remaining active node (which must be this one)\n      const activeNodeIndices = activeNodes.map((active, i) => active ? i : -1).filter(i => i >= 0);\n      if (activeNodeIndices.length === 1 && activeNodeIndices[0] === index) {\n        console.log(\"Can't deactivate the last node\");\n        return;\n      }\n    }\n    \n    // Make this node inactive\n    setActiveNodes(prev => {\n      const newActive = [...prev];\n      newActive[index] = false;\n      return newActive;\n    });\n    \n    // Check if we now have 4 inactive nodes (1 active)\n    const newInactiveCount = inactiveCount + 1;\n    if (newInactiveCount === 4) {\n      // Find the one remaining active node\n      const remainingActiveIndex = activeNodes.findIndex((active, i) => active && i !== index);\n      if (remainingActiveIndex !== -1) {\n        // Expand the remaining active node\n        expandNode(remainingActiveIndex);\n      }\n    }\n  };\n  \n  const handleMouseDown = useCallback((e, id) => {\n    e.stopPropagation();\n    \n    const element = e.currentTarget;\n    const rect = element.getBoundingClientRect();\n    \n    // Calculate offset from the center of the element\n    const offsetX = e.clientX - (rect.left + rect.width / 2);\n    const offsetY = e.clientY - (rect.top + rect.height / 2);\n    \n    setDragging(id);\n    setDragOffset({ x: offsetX, y: offsetY });\n    \n    document.addEventListener('mousemove', handleMouseMove);\n    document.addEventListener('mouseup', handleMouseUp);\n  }, []);\n\n  const handleMouseMove = useCallback((e) => {\n    if (dragging) {\n      setPositions(prevPositions => ({\n        ...prevPositions,\n        [dragging]: {\n          x: e.clientX - dragOffset.x,\n          y: e.clientY - dragOffset.y\n        }\n      }));\n    }\n  }, [dragging, dragOffset]);\n\n  const handleMouseUp = useCallback(() => {\n    setDragging(null);\n    document.removeEventListener('mousemove', handleMouseMove);\n    document.removeEventListener('mouseup', handleMouseUp);\n  }, [handleMouseMove]);\n\n  // Clean up event listeners\n  useEffect(() => {\n    return () => {\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n    };\n  }, [handleMouseMove, handleMouseUp]);\n\n  const renderConnections = () => {\n    if (!centralRef.current) return null;\n    \n    const centralRect = centralRef.current.getBoundingClientRect();\n    const centerX = centralRect.left + centralRect.width / 2;\n    const centerY = centralRect.top + centralRect.height / 2;\n    \n    return concepts.map(concept => {\n      const pos = positions[concept.id];\n      if (!pos) return null;\n      \n      return (\n        <line\n          key={`connection-${concept.id}`}\n          x1={centerX}\n          y1={centerY}\n          x2={pos.x}\n          y2={pos.y}\n          className=\"connection\"\n        />\n      );\n    });\n  };\n\n  // Use useEffect to ensure connections are updated when node dimensions change\n  useEffect(() => {\n    // Create a resize observer to detect size changes in nodes\n    const resizeObserver = new ResizeObserver(() => {\n      // Force a re-render to update connections\n      setPositions({...positions});\n    });\n    \n    // Observe central node\n    if (centralRef.current) {\n      resizeObserver.observe(centralRef.current);\n    }\n    \n    // Observe all concept nodes\n    conceptRefs.current.forEach(ref => {\n      if (ref.current) {\n        resizeObserver.observe(ref.current);\n      }\n    });\n    \n    return () => {\n      resizeObserver.disconnect();\n    };\n  }, [conceptRefs.current.length, centralRef.current, expandedNodeIndex]);\n\n  // Console log for debugging\n  console.log(\"Active nodes:\", activeNodes);\n  console.log(\"Expanded node index:\", expandedNodeIndex);\n  console.log(\"Expanded concepts:\", expandedConcepts);\n  console.log(\"Positions:\", positions);\n\n  return (\n    <div className=\"mind-map-container\">\n      <div className=\"mind-map\" ref={mindMapRef}>\n        <svg className=\"connections\" ref={svgRef}>\n          {renderConnections()}\n        </svg>\n        \n        <div className=\"central-question\" ref={centralRef}>\n          {centralQuestion}\n        </div>\n        \n        {concepts.map((concept, index) => {\n          const pos = positions[`concept-${index}`] || { x: 0, y: 0 };\n          const isDragging = dragging === `concept-${index}`;\n          \n          return (\n            <div\n              key={index}\n              className={`concept ${!activeNodes[index] ? 'inactive' : ''} ${isDragging ? 'dragging' : ''} ${index === expandedNodeIndex ? 'expanded' : ''}`}\n              style={{\n                left: `${pos.x}px`,\n                top: `${pos.y}px`,\n                cursor: isDragging ? 'grabbing' : 'grab'\n              }}\n              ref={conceptRefs.current[index]}\n              onMouseDown={(e) => handleMouseDown(e, `concept-${index}`)}\n              onClick={(e) => {\n                e.stopPropagation();\n                if (!dragging) {\n                  toggleNodeActive(index);\n                }\n              }}\n            >\n              {concept}\n            </div>\n          );\n        })}\n        \n        {/* Expanded Concept Nodes */}\n        {expandedNodeIndex !== null && expandedConcepts.map((concept, index) => {\n          const pos = positions[`expanded-${expandedNodeIndex}-${index}`];\n          if (!pos) return null;\n          \n          return (\n            <div\n              key={`expanded-${expandedNodeIndex}-${index}`}\n              className=\"concept expanded-child\"\n              data-expanded-index={`${expandedNodeIndex}-${index}`}\n              style={{\n                left: `${pos.x}px`,\n                top: `${pos.y}px`,\n                border: '2px solid #000'\n              }}\n            >\n              <div className=\"concept-title\">{concept.title}</div>\n              {concept.description && (\n                <div className=\"concept-description\">{concept.description}</div>\n              )}\n              <div className=\"concept-icon\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n                  <path fill=\"none\" d=\"M0 0h24v24H0z\"/>\n                  <path d=\"M9.973 18h4.054c.132-1.202.745-2.194 1.74-3.277.113-.122.832-.867.917-.973a6 6 0 1 0-9.37-.002c.086.107.807.853.918.974.996 1.084 1.609 2.076 1.741 3.278zM14 20h-4v1h4v-1zm-8.246-5a8 8 0 1 1 12.49.002C17.624 15.774 16 17 16 18.5V21a2 2 0 0 1-2 2h-4a2 2 0 0 1-2-2v-2.5C8 17 6.375 15.774 5.754 15z\" fill=\"rgba(0,0,0,0.6)\"/>\n                </svg>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default MindMap; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}