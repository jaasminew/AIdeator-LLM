{"ast":null,"code":"var _jsxFileName = \"/Users/kei/AIdeator-LLM/frontend/src/components/MindMap.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './MindMap.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MindMap = ({\n  centralQuestion,\n  concepts\n}) => {\n  _s();\n  const [positions, setPositions] = useState({});\n  const [draggedConcept, setDraggedConcept] = useState(null);\n  const [dragOffset, setDragOffset] = useState({\n    x: 0,\n    y: 0\n  });\n  const [activeNodes, setActiveNodes] = useState(concepts.map(() => true));\n  const [expandedNodeIndex, setExpandedNodeIndex] = useState(null);\n  const [expandedConcepts, setExpandedConcepts] = useState([]);\n  const mapRef = useRef(null);\n  const conceptRefs = useRef([]);\n  const centralRef = useRef(null);\n\n  // Initialize refs for concept nodes\n  useEffect(() => {\n    conceptRefs.current = Array(concepts.length).fill().map(() => /*#__PURE__*/React.createRef());\n  }, [concepts.length]);\n\n  // Initialize positions in a balanced layout\n  useEffect(() => {\n    if (Object.keys(positions).length === 0) {\n      // Positions that match the reference image exactly\n      const initialPositions = {\n        'concept-0': {\n          x: 0,\n          y: -180\n        },\n        // Top\n        'concept-1': {\n          x: -280,\n          y: 0\n        },\n        // Left\n        'concept-2': {\n          x: 280,\n          y: 0\n        },\n        // Right\n        'concept-3': {\n          x: -180,\n          y: 200\n        },\n        // Bottom Left\n        'concept-4': {\n          x: 180,\n          y: 200\n        } // Bottom Right\n      };\n      setPositions(initialPositions);\n    }\n  }, [positions]);\n\n  // Expand a node with 5 new child nodes\n  const expandNode = index => {\n    console.log(\"Expanding node\", index);\n    setExpandedNodeIndex(index);\n\n    // Create 5 new concept nodes with titles and descriptions\n    const newConcepts = [{\n      title: \"Fear of letting others down\",\n      description: \"Social and professional pressures can make people fear judgment from peers.\"\n    }, {\n      title: \"Concept B\",\n      description: \"A detailed description of concept B and its implications.\"\n    }, {\n      title: \"Concept C\",\n      description: \"A detailed description of concept C and its implications.\"\n    }, {\n      title: \"Concept D\",\n      description: \"A detailed description of concept D and its implications.\"\n    }, {\n      title: \"Concept E\",\n      description: \"A detailed description of concept E and its implications.\"\n    }];\n    setExpandedConcepts(newConcepts);\n\n    // Create positions for the new nodes following the parent's side\n    const parentPos = positions[`concept-${index}`];\n    const newPositions = {\n      ...positions\n    };\n\n    // Determine which side the parent node is on relative to the center\n    // This uses the standard layout: top, left, right, bottom-left, bottom-right\n    let direction;\n    if (index === 0) {\n      // Top node - place children above it\n      direction = 'top';\n    } else if (index === 1) {\n      // Left node - place children to the left\n      direction = 'left';\n    } else if (index === 2) {\n      // Right node - place children to the right\n      direction = 'right';\n    } else if (index === 3) {\n      // Bottom Left node - place children below and to the left\n      direction = 'bottom-left';\n    } else if (index === 4) {\n      // Bottom Right node - place children below and to the right\n      direction = 'bottom-right';\n    }\n    console.log(\"Direction for expanded nodes:\", direction);\n\n    // Position nodes based on the parent's position/direction\n    switch (direction) {\n      case 'top':\n        // Arrange horizontally above the parent\n        for (let i = 0; i < newConcepts.length; i++) {\n          const xOffset = (i - 2) * 120; // -240, -120, 0, 120, 240\n          newPositions[`expanded-${index}-${i}`] = {\n            x: parentPos.x + xOffset,\n            y: parentPos.y - 150\n          };\n        }\n        break;\n      case 'left':\n        // Arrange vertically to the left - increase spacing\n        for (let i = 0; i < newConcepts.length; i++) {\n          const yOffset = (i - 2) * 100; // -200, -100, 0, 100, 200\n          newPositions[`expanded-${index}-${i}`] = {\n            x: parentPos.x - 250,\n            y: parentPos.y + yOffset\n          };\n        }\n        break;\n      case 'right':\n        // Arrange vertically to the right - increase spacing\n        for (let i = 0; i < newConcepts.length; i++) {\n          const yOffset = (i - 2) * 100; // -200, -100, 0, 100, 200\n          newPositions[`expanded-${index}-${i}`] = {\n            x: parentPos.x + 250,\n            y: parentPos.y + yOffset\n          };\n        }\n        break;\n      case 'bottom-left':\n        // Arrange horizontally below and to the left\n        for (let i = 0; i < newConcepts.length; i++) {\n          const xOffset = (i - 2) * 120; // -240, -120, 0, 120, 240\n          newPositions[`expanded-${index}-${i}`] = {\n            x: parentPos.x - 100 + xOffset,\n            y: parentPos.y + 150\n          };\n        }\n        break;\n      case 'bottom-right':\n        // Arrange horizontally below and to the right\n        for (let i = 0; i < newConcepts.length; i++) {\n          const xOffset = (i - 2) * 120; // -240, -120, 0, 120, 240\n          newPositions[`expanded-${index}-${i}`] = {\n            x: parentPos.x + 100 + xOffset,\n            y: parentPos.y + 150\n          };\n        }\n        break;\n    }\n    setPositions(newPositions);\n  };\n\n  // Toggle node active state\n  const toggleNodeActive = index => {\n    // Count how many inactive nodes we currently have\n    const inactiveCount = activeNodes.filter(active => !active).length;\n\n    // If this node is already inactive, we can always make it active again\n    if (!activeNodes[index]) {\n      setActiveNodes(prev => {\n        const newActive = [...prev];\n        newActive[index] = true;\n        return newActive;\n      });\n      // If we're activating a node, clear expansion\n      if (expandedNodeIndex !== null) {\n        setExpandedNodeIndex(null);\n        setExpandedConcepts([]);\n      }\n      return;\n    }\n\n    // If this would be the 5th inactive node (all inactive), don't allow it\n    if (inactiveCount === 4) {\n      // Find the only remaining active node (which must be this one)\n      const activeNodeIndices = activeNodes.map((active, i) => active ? i : -1).filter(i => i >= 0);\n      if (activeNodeIndices.length === 1 && activeNodeIndices[0] === index) {\n        console.log(\"Can't deactivate the last node\");\n        return;\n      }\n    }\n\n    // Make this node inactive\n    setActiveNodes(prev => {\n      const newActive = [...prev];\n      newActive[index] = false;\n      return newActive;\n    });\n\n    // Check if we now have 4 inactive nodes (1 active)\n    const newInactiveCount = inactiveCount + 1;\n    if (newInactiveCount === 4) {\n      // Find the one remaining active node\n      const remainingActiveIndex = activeNodes.findIndex((active, i) => active && i !== index);\n      if (remainingActiveIndex !== -1) {\n        // Expand the remaining active node\n        expandNode(remainingActiveIndex);\n      }\n    }\n  };\n\n  // Handle starting to drag a concept\n  const handleMouseDown = (e, conceptId) => {\n    e.preventDefault();\n    e.stopPropagation();\n    const rect = e.currentTarget.getBoundingClientRect();\n    const mapRect = mapRef.current.getBoundingClientRect();\n    setDraggedConcept(conceptId);\n    setDragOffset({\n      x: e.clientX - (rect.left - mapRect.left),\n      y: e.clientY - (rect.top - mapRect.top)\n    });\n    document.addEventListener('mousemove', handleMouseMove);\n    document.addEventListener('mouseup', handleMouseUp);\n  };\n\n  // Handle dragging a concept\n  const handleMouseMove = e => {\n    if (!draggedConcept) return;\n    e.preventDefault();\n    const mapRect = mapRef.current.getBoundingClientRect();\n    const newX = e.clientX - mapRect.left - dragOffset.x;\n    const newY = e.clientY - mapRect.top - dragOffset.y;\n    setPositions(prev => ({\n      ...prev,\n      [draggedConcept]: {\n        x: newX,\n        y: newY\n      }\n    }));\n  };\n\n  // Handle dropping a concept\n  const handleMouseUp = () => {\n    setDraggedConcept(null);\n    document.removeEventListener('mousemove', handleMouseMove);\n    document.removeEventListener('mouseup', handleMouseUp);\n  };\n\n  // Render connection lines between central node and concepts\n  const renderConnections = () => {\n    var _mapRef$current;\n    const mapRect = (_mapRef$current = mapRef.current) === null || _mapRef$current === void 0 ? void 0 : _mapRef$current.getBoundingClientRect();\n    if (!mapRect) return null;\n\n    // Fixed center coordinates of the map\n    const centerX = mapRect.width / 2;\n    const centerY = mapRect.height / 2;\n    const connections = [];\n\n    // Render connections to main concepts\n    concepts.forEach((_, index) => {\n      const pos = positions[`concept-${index}`] || {\n        x: 0,\n        y: 0\n      };\n\n      // The center of each concept is exactly at its position coordinates\n      // Because we use transform: translate(-50%, -50%) in CSS\n      const conceptCenterX = centerX + pos.x;\n      const conceptCenterY = centerY + pos.y;\n      connections.push(/*#__PURE__*/_jsxDEV(\"line\", {\n        x1: centerX,\n        y1: centerY,\n        x2: conceptCenterX,\n        y2: conceptCenterY,\n        stroke: \"#000\",\n        strokeWidth: \"2\",\n        className: activeNodes[index] ? 'connection' : 'connection inactive'\n      }, `line-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this));\n\n      // If this is the expanded node, add connections to expanded concepts\n      if (index === expandedNodeIndex) {\n        expandedConcepts.forEach((_, i) => {\n          const expandedPos = positions[`expanded-${index}-${i}`];\n          if (!expandedPos) return;\n\n          // Center of expanded node is at its position \n          // Again, transform: translate(-50%, -50%) in CSS centers it\n          const expandedCenterX = centerX + expandedPos.x;\n          const expandedCenterY = centerY + expandedPos.y;\n          connections.push(/*#__PURE__*/_jsxDEV(\"line\", {\n            x1: conceptCenterX,\n            y1: conceptCenterY,\n            x2: expandedCenterX,\n            y2: expandedCenterY,\n            stroke: \"#000\",\n            strokeWidth: \"2\",\n            className: \"connection expanded\"\n          }, `expanded-line-${index}-${i}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this));\n        });\n      }\n    });\n    return connections;\n  };\n\n  // Use useEffect to ensure connections are updated when node dimensions change\n  useEffect(() => {\n    // Create a resize observer to detect size changes in nodes\n    const resizeObserver = new ResizeObserver(() => {\n      // Force a re-render to update connections\n      setPositions({\n        ...positions\n      });\n    });\n\n    // Observe central node\n    if (centralRef.current) {\n      resizeObserver.observe(centralRef.current);\n    }\n\n    // Observe all concept nodes\n    conceptRefs.current.forEach(ref => {\n      if (ref.current) {\n        resizeObserver.observe(ref.current);\n      }\n    });\n    return () => {\n      resizeObserver.disconnect();\n    };\n  }, [conceptRefs.current.length, centralRef.current, expandedNodeIndex]);\n\n  // Console log for debugging\n  console.log(\"Active nodes:\", activeNodes);\n  console.log(\"Expanded node index:\", expandedNodeIndex);\n  console.log(\"Expanded concepts:\", expandedConcepts);\n  console.log(\"Positions:\", positions);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mind-map-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mind-map\",\n      ref: mapRef,\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        className: \"connections\",\n        children: mapRef.current && renderConnections()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"central-question\",\n        ref: centralRef,\n        children: centralQuestion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }, this), concepts.map((concept, index) => {\n        const pos = positions[`concept-${index}`] || {\n          x: 0,\n          y: 0\n        };\n        const isDragging = draggedConcept === `concept-${index}`;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `concept ${!activeNodes[index] ? 'inactive' : ''} ${isDragging ? 'dragging' : ''} ${index === expandedNodeIndex ? 'expanded' : ''}`,\n          style: {\n            top: `calc(50% + ${pos.y}px)`,\n            left: `calc(50% + ${pos.x}px)`,\n            transform: 'translate(-50%, -50%)',\n            cursor: isDragging ? 'grabbing' : 'grab'\n          },\n          ref: conceptRefs.current[index],\n          onMouseDown: e => handleMouseDown(e, `concept-${index}`),\n          onClick: e => {\n            e.stopPropagation();\n            if (!draggedConcept) {\n              toggleNodeActive(index);\n            }\n          },\n          children: concept\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 13\n        }, this);\n      }), expandedNodeIndex !== null && expandedConcepts.map((concept, index) => {\n        const pos = positions[`expanded-${expandedNodeIndex}-${index}`];\n        if (!pos) return null;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"concept expanded-child\",\n          \"data-expanded-index\": `${expandedNodeIndex}-${index}`,\n          style: {\n            top: `calc(50% + ${pos.y}px)`,\n            left: `calc(50% + ${pos.x}px)`,\n            transform: 'translate(-50%, -50%)',\n            border: '2px solid #000'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"concept-title\",\n            children: concept.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 15\n          }, this), concept.description && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"concept-description\",\n            children: concept.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"concept-icon\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              viewBox: \"0 0 24 24\",\n              width: \"24\",\n              height: \"24\",\n              children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                fill: \"none\",\n                d: \"M0 0h24v24H0z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M9.973 18h4.054c.132-1.202.745-2.194 1.74-3.277.113-.122.832-.867.917-.973a6 6 0 1 0-9.37-.002c.086.107.807.853.918.974.996 1.084 1.609 2.076 1.741 3.278zM14 20h-4v1h4v-1zm-8.246-5a8 8 0 1 1 12.49.002C17.624 15.774 16 17 16 18.5V21a2 2 0 0 1-2 2h-4a2 2 0 0 1-2-2v-2.5C8 17 6.375 15.774 5.754 15z\",\n                fill: \"rgba(0,0,0,0.6)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 15\n          }, this)]\n        }, `expanded-${expandedNodeIndex}-${index}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 339,\n    columnNumber: 5\n  }, this);\n};\n_s(MindMap, \"7LMd7otXTawRJ1C+5ihBsmUns34=\");\n_c = MindMap;\nexport default MindMap;\nvar _c;\n$RefreshReg$(_c, \"MindMap\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","MindMap","centralQuestion","concepts","_s","positions","setPositions","draggedConcept","setDraggedConcept","dragOffset","setDragOffset","x","y","activeNodes","setActiveNodes","map","expandedNodeIndex","setExpandedNodeIndex","expandedConcepts","setExpandedConcepts","mapRef","conceptRefs","centralRef","current","Array","length","fill","createRef","Object","keys","initialPositions","expandNode","index","console","log","newConcepts","title","description","parentPos","newPositions","direction","i","xOffset","yOffset","toggleNodeActive","inactiveCount","filter","active","prev","newActive","activeNodeIndices","newInactiveCount","remainingActiveIndex","findIndex","handleMouseDown","e","conceptId","preventDefault","stopPropagation","rect","currentTarget","getBoundingClientRect","mapRect","clientX","left","clientY","top","document","addEventListener","handleMouseMove","handleMouseUp","newX","newY","removeEventListener","renderConnections","_mapRef$current","centerX","width","centerY","height","connections","forEach","_","pos","conceptCenterX","conceptCenterY","push","x1","y1","x2","y2","stroke","strokeWidth","className","fileName","_jsxFileName","lineNumber","columnNumber","expandedPos","expandedCenterX","expandedCenterY","resizeObserver","ResizeObserver","observe","ref","disconnect","children","concept","isDragging","style","transform","cursor","onMouseDown","onClick","border","xmlns","viewBox","d","_c","$RefreshReg$"],"sources":["/Users/kei/AIdeator-LLM/frontend/src/components/MindMap.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './MindMap.css';\n\nconst MindMap = ({ centralQuestion, concepts }) => {\n  const [positions, setPositions] = useState({});\n  const [draggedConcept, setDraggedConcept] = useState(null);\n  const [dragOffset, setDragOffset] = useState({ x: 0, y: 0 });\n  const [activeNodes, setActiveNodes] = useState(concepts.map(() => true));\n  const [expandedNodeIndex, setExpandedNodeIndex] = useState(null);\n  const [expandedConcepts, setExpandedConcepts] = useState([]);\n  const mapRef = useRef(null);\n  const conceptRefs = useRef([]);\n  const centralRef = useRef(null);\n\n  // Initialize refs for concept nodes\n  useEffect(() => {\n    conceptRefs.current = Array(concepts.length).fill().map(() => React.createRef());\n  }, [concepts.length]);\n\n  // Initialize positions in a balanced layout\n  useEffect(() => {\n    if (Object.keys(positions).length === 0) {\n      // Positions that match the reference image exactly\n      const initialPositions = {\n        'concept-0': { x: 0, y: -180 },      // Top\n        'concept-1': { x: -280, y: 0 },      // Left\n        'concept-2': { x: 280, y: 0 },       // Right\n        'concept-3': { x: -180, y: 200 },    // Bottom Left\n        'concept-4': { x: 180, y: 200 }      // Bottom Right\n      };\n      \n      setPositions(initialPositions);\n    }\n  }, [positions]);\n\n  // Expand a node with 5 new child nodes\n  const expandNode = (index) => {\n    console.log(\"Expanding node\", index);\n    setExpandedNodeIndex(index);\n    \n    // Create 5 new concept nodes with titles and descriptions\n    const newConcepts = [\n      {\n        title: \"Fear of letting others down\",\n        description: \"Social and professional pressures can make people fear judgment from peers.\"\n      },\n      {\n        title: \"Concept B\",\n        description: \"A detailed description of concept B and its implications.\"\n      },\n      {\n        title: \"Concept C\",\n        description: \"A detailed description of concept C and its implications.\"\n      },\n      {\n        title: \"Concept D\",\n        description: \"A detailed description of concept D and its implications.\"\n      },\n      {\n        title: \"Concept E\",\n        description: \"A detailed description of concept E and its implications.\"\n      }\n    ];\n    \n    setExpandedConcepts(newConcepts);\n    \n    // Create positions for the new nodes following the parent's side\n    const parentPos = positions[`concept-${index}`];\n    const newPositions = { ...positions };\n    \n    // Determine which side the parent node is on relative to the center\n    // This uses the standard layout: top, left, right, bottom-left, bottom-right\n    let direction;\n    \n    if (index === 0) {\n      // Top node - place children above it\n      direction = 'top';\n    } else if (index === 1) {\n      // Left node - place children to the left\n      direction = 'left';\n    } else if (index === 2) {\n      // Right node - place children to the right\n      direction = 'right';\n    } else if (index === 3) {\n      // Bottom Left node - place children below and to the left\n      direction = 'bottom-left';\n    } else if (index === 4) {\n      // Bottom Right node - place children below and to the right\n      direction = 'bottom-right';\n    }\n    \n    console.log(\"Direction for expanded nodes:\", direction);\n    \n    // Position nodes based on the parent's position/direction\n    switch (direction) {\n      case 'top':\n        // Arrange horizontally above the parent\n        for (let i = 0; i < newConcepts.length; i++) {\n          const xOffset = (i - 2) * 120; // -240, -120, 0, 120, 240\n          newPositions[`expanded-${index}-${i}`] = {\n            x: parentPos.x + xOffset,\n            y: parentPos.y - 150\n          };\n        }\n        break;\n        \n      case 'left':\n        // Arrange vertically to the left - increase spacing\n        for (let i = 0; i < newConcepts.length; i++) {\n          const yOffset = (i - 2) * 100; // -200, -100, 0, 100, 200\n          newPositions[`expanded-${index}-${i}`] = {\n            x: parentPos.x - 250,\n            y: parentPos.y + yOffset\n          };\n        }\n        break;\n        \n      case 'right':\n        // Arrange vertically to the right - increase spacing\n        for (let i = 0; i < newConcepts.length; i++) {\n          const yOffset = (i - 2) * 100; // -200, -100, 0, 100, 200\n          newPositions[`expanded-${index}-${i}`] = {\n            x: parentPos.x + 250,\n            y: parentPos.y + yOffset\n          };\n        }\n        break;\n        \n      case 'bottom-left':\n        // Arrange horizontally below and to the left\n        for (let i = 0; i < newConcepts.length; i++) {\n          const xOffset = (i - 2) * 120; // -240, -120, 0, 120, 240\n          newPositions[`expanded-${index}-${i}`] = {\n            x: parentPos.x - 100 + xOffset,\n            y: parentPos.y + 150\n          };\n        }\n        break;\n        \n      case 'bottom-right':\n        // Arrange horizontally below and to the right\n        for (let i = 0; i < newConcepts.length; i++) {\n          const xOffset = (i - 2) * 120; // -240, -120, 0, 120, 240\n          newPositions[`expanded-${index}-${i}`] = {\n            x: parentPos.x + 100 + xOffset,\n            y: parentPos.y + 150\n          };\n        }\n        break;\n    }\n    \n    setPositions(newPositions);\n  };\n\n  // Toggle node active state\n  const toggleNodeActive = (index) => {\n    // Count how many inactive nodes we currently have\n    const inactiveCount = activeNodes.filter(active => !active).length;\n    \n    // If this node is already inactive, we can always make it active again\n    if (!activeNodes[index]) {\n      setActiveNodes(prev => {\n        const newActive = [...prev];\n        newActive[index] = true;\n        return newActive;\n      });\n      // If we're activating a node, clear expansion\n      if (expandedNodeIndex !== null) {\n        setExpandedNodeIndex(null);\n        setExpandedConcepts([]);\n      }\n      return;\n    }\n    \n    // If this would be the 5th inactive node (all inactive), don't allow it\n    if (inactiveCount === 4) {\n      // Find the only remaining active node (which must be this one)\n      const activeNodeIndices = activeNodes.map((active, i) => active ? i : -1).filter(i => i >= 0);\n      if (activeNodeIndices.length === 1 && activeNodeIndices[0] === index) {\n        console.log(\"Can't deactivate the last node\");\n        return;\n      }\n    }\n    \n    // Make this node inactive\n    setActiveNodes(prev => {\n      const newActive = [...prev];\n      newActive[index] = false;\n      return newActive;\n    });\n    \n    // Check if we now have 4 inactive nodes (1 active)\n    const newInactiveCount = inactiveCount + 1;\n    if (newInactiveCount === 4) {\n      // Find the one remaining active node\n      const remainingActiveIndex = activeNodes.findIndex((active, i) => active && i !== index);\n      if (remainingActiveIndex !== -1) {\n        // Expand the remaining active node\n        expandNode(remainingActiveIndex);\n      }\n    }\n  };\n  \n  // Handle starting to drag a concept\n  const handleMouseDown = (e, conceptId) => {\n    e.preventDefault();\n    e.stopPropagation();\n    \n    const rect = e.currentTarget.getBoundingClientRect();\n    const mapRect = mapRef.current.getBoundingClientRect();\n    \n    setDraggedConcept(conceptId);\n    setDragOffset({\n      x: e.clientX - (rect.left - mapRect.left),\n      y: e.clientY - (rect.top - mapRect.top)\n    });\n    \n    document.addEventListener('mousemove', handleMouseMove);\n    document.addEventListener('mouseup', handleMouseUp);\n  };\n\n  // Handle dragging a concept\n  const handleMouseMove = (e) => {\n    if (!draggedConcept) return;\n    \n    e.preventDefault();\n    const mapRect = mapRef.current.getBoundingClientRect();\n    const newX = e.clientX - mapRect.left - dragOffset.x;\n    const newY = e.clientY - mapRect.top - dragOffset.y;\n\n    setPositions(prev => ({\n      ...prev,\n      [draggedConcept]: { x: newX, y: newY }\n    }));\n  };\n\n  // Handle dropping a concept\n  const handleMouseUp = () => {\n    setDraggedConcept(null);\n    document.removeEventListener('mousemove', handleMouseMove);\n    document.removeEventListener('mouseup', handleMouseUp);\n  };\n\n  // Render connection lines between central node and concepts\n  const renderConnections = () => {\n    const mapRect = mapRef.current?.getBoundingClientRect();\n    if (!mapRect) return null;\n    \n    // Fixed center coordinates of the map\n    const centerX = mapRect.width / 2;\n    const centerY = mapRect.height / 2;\n    \n    const connections = [];\n    \n    // Render connections to main concepts\n    concepts.forEach((_, index) => {\n      const pos = positions[`concept-${index}`] || { x: 0, y: 0 };\n      \n      // The center of each concept is exactly at its position coordinates\n      // Because we use transform: translate(-50%, -50%) in CSS\n      const conceptCenterX = centerX + pos.x;\n      const conceptCenterY = centerY + pos.y;\n      \n      connections.push(\n        <line\n          key={`line-${index}`}\n          x1={centerX}\n          y1={centerY}\n          x2={conceptCenterX}\n          y2={conceptCenterY}\n          stroke=\"#000\"\n          strokeWidth=\"2\"\n          className={activeNodes[index] ? 'connection' : 'connection inactive'}\n        />\n      );\n      \n      // If this is the expanded node, add connections to expanded concepts\n      if (index === expandedNodeIndex) {\n        expandedConcepts.forEach((_, i) => {\n          const expandedPos = positions[`expanded-${index}-${i}`];\n          if (!expandedPos) return;\n          \n          // Center of expanded node is at its position \n          // Again, transform: translate(-50%, -50%) in CSS centers it\n          const expandedCenterX = centerX + expandedPos.x;\n          const expandedCenterY = centerY + expandedPos.y;\n          \n          connections.push(\n            <line\n              key={`expanded-line-${index}-${i}`}\n              x1={conceptCenterX}\n              y1={conceptCenterY}\n              x2={expandedCenterX}\n              y2={expandedCenterY}\n              stroke=\"#000\"\n              strokeWidth=\"2\"\n              className=\"connection expanded\"\n            />\n          );\n        });\n      }\n    });\n    \n    return connections;\n  };\n\n  // Use useEffect to ensure connections are updated when node dimensions change\n  useEffect(() => {\n    // Create a resize observer to detect size changes in nodes\n    const resizeObserver = new ResizeObserver(() => {\n      // Force a re-render to update connections\n      setPositions({...positions});\n    });\n    \n    // Observe central node\n    if (centralRef.current) {\n      resizeObserver.observe(centralRef.current);\n    }\n    \n    // Observe all concept nodes\n    conceptRefs.current.forEach(ref => {\n      if (ref.current) {\n        resizeObserver.observe(ref.current);\n      }\n    });\n    \n    return () => {\n      resizeObserver.disconnect();\n    };\n  }, [conceptRefs.current.length, centralRef.current, expandedNodeIndex]);\n\n  // Console log for debugging\n  console.log(\"Active nodes:\", activeNodes);\n  console.log(\"Expanded node index:\", expandedNodeIndex);\n  console.log(\"Expanded concepts:\", expandedConcepts);\n  console.log(\"Positions:\", positions);\n\n  return (\n    <div className=\"mind-map-container\">\n      <div className=\"mind-map\" ref={mapRef}>\n        {/* SVG for the connections between nodes */}\n        <svg className=\"connections\">\n          {mapRef.current && renderConnections()}\n        </svg>\n        \n        {/* Central Question Node */}\n        <div className=\"central-question\" ref={centralRef}>\n          {centralQuestion}\n        </div>\n        \n        {/* Concept Nodes */}\n        {concepts.map((concept, index) => {\n          const pos = positions[`concept-${index}`] || { x: 0, y: 0 };\n          const isDragging = draggedConcept === `concept-${index}`;\n          \n          return (\n            <div\n              key={index}\n              className={`concept ${!activeNodes[index] ? 'inactive' : ''} ${isDragging ? 'dragging' : ''} ${index === expandedNodeIndex ? 'expanded' : ''}`}\n              style={{\n                top: `calc(50% + ${pos.y}px)`,\n                left: `calc(50% + ${pos.x}px)`,\n                transform: 'translate(-50%, -50%)',\n                cursor: isDragging ? 'grabbing' : 'grab'\n              }}\n              ref={conceptRefs.current[index]}\n              onMouseDown={(e) => handleMouseDown(e, `concept-${index}`)}\n              onClick={(e) => {\n                e.stopPropagation();\n                if (!draggedConcept) {\n                  toggleNodeActive(index);\n                }\n              }}\n            >\n              {concept}\n            </div>\n          );\n        })}\n        \n        {/* Expanded Concept Nodes */}\n        {expandedNodeIndex !== null && expandedConcepts.map((concept, index) => {\n          const pos = positions[`expanded-${expandedNodeIndex}-${index}`];\n          if (!pos) return null;\n          \n          return (\n            <div\n              key={`expanded-${expandedNodeIndex}-${index}`}\n              className=\"concept expanded-child\"\n              data-expanded-index={`${expandedNodeIndex}-${index}`}\n              style={{\n                top: `calc(50% + ${pos.y}px)`,\n                left: `calc(50% + ${pos.x}px)`,\n                transform: 'translate(-50%, -50%)',\n                border: '2px solid #000'\n              }}\n            >\n              <div className=\"concept-title\">{concept.title}</div>\n              {concept.description && (\n                <div className=\"concept-description\">{concept.description}</div>\n              )}\n              <div className=\"concept-icon\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n                  <path fill=\"none\" d=\"M0 0h24v24H0z\"/>\n                  <path d=\"M9.973 18h4.054c.132-1.202.745-2.194 1.74-3.277.113-.122.832-.867.917-.973a6 6 0 1 0-9.37-.002c.086.107.807.853.918.974.996 1.084 1.609 2.076 1.741 3.278zM14 20h-4v1h4v-1zm-8.246-5a8 8 0 1 1 12.49.002C17.624 15.774 16 17 16 18.5V21a2 2 0 0 1-2 2h-4a2 2 0 0 1-2-2v-2.5C8 17 6.375 15.774 5.754 15z\" fill=\"rgba(0,0,0,0.6)\"/>\n                </svg>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default MindMap; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}